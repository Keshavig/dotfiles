cd projects/j
dc projects
cd LazyNvimConfigured
cp -r nvim ~/.config/
dc slstatus
dc a
dc --help
dc -e="2+3"
dc -e=2+3
dc -e 2+3
dc -i
dc --expression=2
dc --expression=2+3
dc --expression=(2+3)
nvim tokyonight-icons.h
cd colr
rmrn tokyonight
rmrn tokyonight-icons.h
rm -rfi
man r
man rf
which rf
type rm
man shred
cd CIler
ïƒº¾
cwd
if [[ pwd == ~/ ]]
if [[ pwd == ~/ ]]\
then\
echo "HI"\
fi
if [[ $(pwd) == ~/ ]]\
then\
echo "HI"\
fi
if [[ $(pwd) == "~/" ]]\
then\
echo "HI"\
fi
if [[ $(pwd) -et "~/" ]]\
then\
echo "HI"\
fi
if [[ "$(pwd)" == "~/" ]]\
then\
echo "HI"\
fi
z=$(pwd)
echo $z
echo ~/
echo ~
if [[ $z == ~ ]] then echo "hi" fi
if [[ $z == ~ ]]\
then\
echo "HI"\
fi
sudo pacman -S lazygit
exa -al
dlcea
exa -a
exa -l
ls -norm
ls 0clear
lsm
ls -orm
ls rr
ls nomr
ls norm
lkr
lr
rla
ls -h
man exa
man eza
exa --tree
rmrn trouble.nvim
cd projets
mkdir ciler
mupdf Downloads/Dragon\ Book\ Compilers\ Principle\ Techniques\ and\ Tools\ 2nd\ Edtion.pdf
rmrn .nf
ks
nvim file_data.h
cd CIl
cd ciler
cp Makefile ../../ciler
cd ../../ciler
nvim file_data.cc
nvim using_lexer.cc
clang++ -Wall -Werror -Wextra lexer.cc using_lexer.cc file_data.cc -o main
cd ~/.local/state/nvim
rmrn lsp.log
cd Ciler
nvim ciler.c
nvim ciler.cc
ld ciler
./ciler test.c
nvim main.
gcc -m64 main.S -o main
man gcc
linux-gcc
linux32
search
setarch
man setarch
uname -m
ccleera
clang++ -Wall -Werror -Wextra rectangle.cc -o rectangle -lthread -ldl -lraylib
clang++ -Wall -Werror -Wextra rectangle.cc -o rectangle -lpthread -ldl -lraylib
]cear
find / -type file raylib
find raylib -type file
find raylib type file
find raylib type -file
find raylib --type file
jkljalclear
ajflaf
set -ve
set
setset
nvim .vimrc
=clar
nvim auto
nvim harpoon.lua
n
-||||
cd 2;6up/home/ke/.local/share/nvim/lazy/mini.pairs
cd ~/.local/share/nvim/lazy/mini.
cd ~/.local/share/nvim/lazy/mini.pairs
nvim Re
cds cear
cd ,cibf
cd .cofig
cd vim
cel
nvim ex
fdlkfdsf
clang++ main.c -o main && ./main
lsd
nvim lc
=
man operator_overloading
rm -r Ciler ciler
rm -rf ciler
mkdir CLe
rm -rf CLe
mkdir Clex
mv Clex clx
mupdf
mupdf Downloads/Dragon\ Book\ Compilers\ Principle\ Techniques\ and\ Tools\ 2nd\ Edtion.pdf &
rmrn ']'
cp file_stuff.h file_stuff.cc
nvim file_stuffc
mv clx src
make celan
rm -rf src/clx
nvim ~/.config/nvim/lua/config/autocmds.lua
lcera
coear
cd rc
nvim clx
./clx
nvim file_stuff.c
nvim file_stuff.h
cd ,..
los
cd clx
nvim file_stuff.cc
rm -rf clx
mkdir relexer
mkdir deepseek
git clone https://github.com/deepseek-ai/DeepSeek-V3.git
cd inference
pip install -r requirements.txt
sudo pip install -r requirements.txt
nvim requirements.txt
sudo pacman -S python-torch
checkmake
checkmake Makefile
nvim init_file.hg
nvim init_file.h
ccle
mv relexer ../src
clrscr
man clrscr
man conio
man conio.h
man stdio
make ..
make ../
man run a command
man all
nvim main,c
nvim mian.c
./main.c
amke
mkdir practice
wc -c
wc readthis.txt
wc readthis.txt -h
wc readthis.txt -h | awk '{print $1}'
wc readthis.txt | awk '{print $1}'
time wc readthis.txt | awk '{print $1}'
time (wc readthis.txt | awk '{print $1}')
nvim readthis.txt
c practice
cd practice
nvim init_file.cc
vim lexer.h
nvim clangLexererr.c
clang clangLexererr.c -o c
nvim what_does_a_lexer_do.txt
c;lar
cd prpo
cd el
cd relexer
nvim togte
rm -r clangLexererr.c
nvim together.cc
gcc
gdb relexer
./relexer
rm -rf relexer
mkdir musicPlayer
cd musicPlayer
nvim todo.txt
clang++ -I/home/ke/.local/include/ -ldl -lpthread -lmath main.cc -o main
clang++ -I/home/ke/.local/include/ -ldl -lpthread main.cc -o main
g++ main.cpp -o imgui_example -lglfw -lGLEW -lGL -ldl
g++ main.cc -o imgui_example -lglfw -lGLEW -lGL -ldl
g++ main.cc -o imgui_example -lglfw -lGLEW -lGL -ldl -I/home/ke/.local/include/imgui -I/home/ke/.local/include/imgui/backends
rm -rf ~/.local/include
rm -rf main.cc main.c main
sudo pacman -S vulkan
sudo pacman -S vulkan-icd-loader
sudo pacman -S vulkan-intel
sudo pacman -Syyu vulkan-intel vulkan-tools
vulkaninfo
yay -S imgui-full
yay -S imgui
where
nvim ray
nvim imgui
cp imgui.h /usr/include
cd backends
cp imgui_impl_glfw.h /usr/include/
sudo cp imgui_impl_glfw.h /usr/include/
sudo cp imgui_impl_opengl3.h /usr/include
nvim ~/main.cc
clang++ main.cc -o main
clang++ main.cc -o main -lpthread -lGL -ldl -lglfw
clang++ main.cc -o main -lpthread -lGL -ldl -lglfw -lGLEW
mkdir guiMusicPlayer
git clone https://github.com/ocornut/imgui.git
rm -rf .editorconfig .gitattributes .gitignore .github LICENSE.txt
cd misc
yay -Rns imgui
cd cpp
nvim imgui.cpp
rm -rf imgui
git clone https://github.com/ocornut/imgui.git -brach docking --recursive
git clone https://github.com/ocornut/imgui.git -branch docking --recursive
git clone https://github.com/ocornut/imgui.git branch docking --recursive
git clone https://github.com/ocornut/imgui.git branch docking
git clone https://github.com/ocornut/imgui.git -branch docking
git clone --branch docking https://github.com/ocurnut/imgui.git
git clone --branch docking https://github.com/ocornut/imgui.git
pkg-config --cflags glfw3
objdump
objdump ap
objdump -d app
mkdir LearningAsm
cd LearningAsm
clang++ main.c -o main -ggdb
objdump -d main > main.asm
nvim main.asm
clang -S main.c
gas
sudo pacman -S binutils
as
nvim main.S
rm main.asm main main.s
gcc main.c -S main
as main.s
chmod +x a.out
ld a.out
fd a.out
nvim main.s
rcle
cd imgui
nvim imgui.h
mkae
nvim pch.h
mv pch.h pch.hpp
nvim pch.cpp
nvim pch.hpp
make all
rm pch*
./app
cd imgi
mkdir gui
nvim main.cp
sudo pacman -S libglut
sudo pacman -S glut
killall glfw
xarchi
xmonitor
xmoniter
xset
xrandr reset
sudo pacman -S arandr
arandr
xrandr 1900x2000
xrandr -s 1900x2000
xrandr --available-modes
xrandr --available-mode
xrandr --mode
xrandr --output --mode
xrandr --output -mode
xrandr --output mode
xrandr --help
man xrandr
xrandr -s 1366x765
xrandr -s 1366x766
xrandr -s 1366x764
xrandr -s 1366x763
xrandr -s 1366x762
xrandr -s 1366x761
xrandr -s 1366x767
killall main
xrandr -s 1366x768
bash -c "$(curl -fsSL https://gef.blah.cat/sh)"
gef
gdb
cd aparse
cd build-release
cd build-debug
gdb -q
gdb aparse -q
mkdir c_lexer
clang++ main.cc -o main -lgflw
mv glad.zip ~/projects/gui
unzip glad.zip
rm -rf glad.zip
cd KHR
mv glad ../
mv gl.c ../glad
mv main.cc src
celear
./release_binary
rm -rf release_binary
cd guiMusicPlayer
cd glad
nvim gl.c
dc src
yay -S glad
clang++ main.cc -o main -lglfw -I/home/ke/projects/gui/
clang++ main.cc -o main -lglfw
where glad
/bin/glad
clang++ main.cc -o main -lglfw -lgl
clang++ main.cc -o main -lglfw -lglad
clang++ main.cc -o main -lglfw -lgladdd
clang++ main.cc -o main -lglfw -lglut
clang++ main.cc -o main -lglfw -lGLEW
yay -Rns gld
yay -Rns glad
clang++ main.cc -o main -lglfw -I/home/ke/projects/gui/ glad/gl.c
clang++ main.cc -o main -lglfw -I/home/ke/projects/gui/ /glad/gl.c
chmod +x build
nvim bui9
env
env bash
clang++ main.cc -o main -lglfw -I/home/ke/projects/gui/ ../glad/gl.c
/usr/bin/ls | grep "\*c"
/usr/bin/ls | grep "\*.c"
/usr/bin/ls | grep "\.c"
/usr/bin/ls | grep "cc"
/usr/bin/ls | grep "\*.cc"
/usr/bin/ls | grep "*.cc"
touch cclear.lx
/usr/bin/ls | grep ".cc"
nvim build
rm build cclear.lx main
cleamr
make clena
git add img
git commit -m "Replace with new image"
git commit -m "Removed obj and executable"
make clean all install clean
git commit -m "Change build command in REadme"
picom -b &
transparency.sh on 0.5
transparency.sh on 0.8
transparency.sh on 0.9
dc 500
nvim some
dc some
man dc
dc p
crap
grep
man grep
sudo pacman -S fretype
sudo pacman -S freetype3
8;10u9;10u
mkdir dependencies.txt
rm -rf dependencies.txt
nvim dependencie.txt
make > clear
pkg-config --libs freetyp2
pkg-config --libs freetype2
pkg-config --cflags glfw
pkg-config --cflags freetype2
nvim .clangd
sudo pacman -Rns freetype2
cds sr
where freetype
where freetype2
cd /usr
cd free
lcl
cd inc
cd include
cd freetype2
cd freetype
sudo nvim ft2build.h
nvim ft2build.h
cds p
cds gui
cds guic
nvim ProblemsIHad.txt
nvim /usr/include/freetype2/ft2build.h
uname
/usr/bin/nvim .zshrc
sudo pacman -S freetype
sudo nvim /usr/include/freetype2/ft2build.h
vim main.cc
vim /usr/include/freetype2/freetype/freetype.h
sudo vim /usr/include/freetype2/ft2build.h
sudo vim /usr/include/freetype2/freetype/freetype.h
nvim /usr/include/freetype2/freetype/freetype.h
sudo pacman -S freetype2
cd /usr/include
cp freetype2/* .
sudo cp freetype2/* .
sudo cp -r freetype2/* .
;l
;ls'\
\
\
\
\
\
cclear\
\

nvim l
nvim indentblankline.lua
cd guic
cd .confog
nvim ArchSmall.hpp
nvim nvim.hpp
cd sor
cd sar
cd logos
nvim kitty.hpp
mkdir linkedListsVsArray
cd Lin
cd linkedListsVsArray
nvim array.cc
mkdir lexr
cd lexr
nvim lexer.hh
uniq
s >a
lowercase
lcase
tr
man tr
mmatch
mismatch
man unix
rm a
man rm
cd c_lexer
nvim test.c
gcc test.c -o test
sudo ./test
lsmod | grep -E "nvidia|amdgpu|nouveau|i915"\

rustc main.c
man rustc
rustc --help
rustc --help | grep c
rm -rf ']'
clang main.c ../glad/gl.c -o main -lpthread -lglfw
nvim int
clang initializationGlfw.c ../glad/gl.c -o main -lpthread -lglfw
clang initializationGlfw.c ../glad/gl.c -o main -lpthread -lglfw -I/home/ke/projects/
xporp
xpro
clang initializationGlfw.c ../glad/gl.c -o main -lpthread -lglfw -I/home/ke/projects/gui/
nvim initializationGlfw.c
sudo pacman -S linmath
yay -S linmath
rm -rf main
rm -rf test test.c
r7435u7435u7435u7435u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u7439u\

uptime -c
uptime -s | awk '{print $2}'
uptime -s | awk '{print $2}' | tr '\n'
uptime -s | awk '{print $2}' | tr -d '\n'
uptime -p | tr -d '\n';
uptime -p | tr -d '\n'
memory
free -p
free | awk '/Mem:/ {printf("%.2f%\n", $3/$2 * 100)}'\

free | awk 'mem'
free | awk mem'
A
free | awk '\mem\'
free | awk '\mem'
free | awk '/Mem:/' | tr -d '\n'
free | awk '/Mem/' | tr -d '\n'
man awk
awk --help
awk -F:
awk -F: '{ print $1 }' /etc/passwd
nvim /etc/passwd
free | awk '/Mem:/ {printf("%.2f%\n", $3/$2 * 100)}' | tr -d '\n'
awk '{u=$2+$4; t=$2+$4+$5; if (NR==1){u1=u; t1=t;} else print ($2+$4-u1) * 100 / (t-t1) "%"; }' <(grep 'cpu ' /proc/stat) <(sleep 1;grep 'cpu ' /proc/stat)
sudo pacman -S mpstat
mpstat
yay -S mpstat
neofetch
top -bn1 | grep "Cpu(s)" | awk '{printf("%.2f%\n", 100 - $8)}'\

top -bn2 | grep "Cpu(s)" | awk '{printf("%.2f%\n", 100 - $8)}'\

cd sl
nvim cpu.
./cpu
nvim getCpuPerc.cpp
clang++ getCpuPerc.cpp -o cpuu
./cpuu
rm -rf cpuu getCpuPerc.cpp
nvim ~
xs
cat /proc/stat | head 1
mkdir scripts
cd sc
rm -rf scripts
mkdir cperc
cat /proc/stat
cat /proc/stat | head -1
cat /proc/stat | head -1 | cut -c 1-6
cat /proc/stat | head -1 | cut -c 1-5
cat /proc/stat | head -1 | cut -c 6
cat /proc/stat | head -1 | cut -c 6-1000
dc .config
cd ls
nvim cpu.c
gdb cperc
./cpec
clang++ cperc.cc -o cperc -ggdb
nvim cperc
for true\
doo
for true\
do\
./cperc\
done
while true\
do\
./cperc\
end
while true\
do\
./cpercend
nvim do.sh
chmod +x do.sh
echo $(echo '100'; echo $(echo '(';head -1 /proc/stat | awk '{print $5}'; sleep 1; echo '-';head -1 /proc/stat |  awk '{print $5}';echo ')/100') | bc -l) | bc -l\

awk -v oldidle=$(awk '/cpu / {print $5}' /proc/stat; sleep 1) '/cpu / {perc=100-($5-oldidle)/100 ; printf "%s", perc}' /proc/stat\

nvim cper.cc
do.sh
clang++ cperc.cc -o cperc
clang++ cperc.cc -o cperc -O3
clang++ cperc.cc -o cperc -O2
time ./cperc
./do.sh
mv do.sh loopOver
rm -rf cperc
clang++ cperc.cc -o cpearc
./cpearc
clang++ cperc.cc -o cperc -Wall -Werror -Weverything -Wextra -O2
clang++ cperc.cc -o cperc -Wall -Werror -Weverything -Wextra -O2 --std=c++11
nvim cperc.cc
./cperc
rm -rf cpearc
clang++ cperc.cc -o cperc -Wall -Werror -Wextra -O2 --std=c++11
clang++ cperc.cc -o cperc -Wall -Werror -Wextra -O2
mv cperc ~/.local/bin/
cpearc
git commit -m "initial and (hope) final commit"
cd sra
./s
make clean install clean
cd c
cd sou
wmctrl
sudo pacman -S wmctrl
git commit -m "Changed sarchi.hpp, added new image and improved README.md"
-cd ..
cd -d
-d
--clear
cd cperc
git commit -m "Changed Readme for better"
git commit -m "Added new image on readme and added comments in sarchi.hpp"
git commit -m "Changed Readme and fixed invalid link to wmctrl"
brightnessctl
brightnessctl 50
brightnessctl 50%
brightnessctl set 50%
time sarchi > /dev/null
cd soiu
cealr
nvim sarchi.h[[
sarchi.hpp
make clean all
time !
time time !
time bi
vim colors.hpp
vim sarchi.cpp
nvim colors.cc
nvim colors.hpp
mv sarchi.cpp clear
cd s
make clean debu
make clean build
mae clean
ls new_sarchi.cpp
nvim new_sarchi.
nvim new_sarchi.cp-p
make debug
gdb sarchi
make clean debug
nvim nwew_sarchi.cpp
nvim new_sarchi.cpp
cp new_sarchi.cpp ../../
git clean
git fetch origin
lks
git reset --hard origin/main
git clone git@github.com:Keshavig/SP.git
cp -r sarchi ~/projects
cp ~/.local/bin/sarchi ~/.localBak/bin/sarchi
cp -mr ~/.local/bin/sarchi ~/.localBak/bin/sarchi
cp ~/.local/bin/sarchi ~/.local/bin/sarchi_bak
mv new_sarchi.cpp ../
mv sarchi SP
git commit -m "NOE"
nvim --theme
nvim colors.cpp
maek
time bin/sarchi
mv ~/github/SP/sarchi ./
rm -rf sarchi
/bin/mv ~/github/SP/sarchi ./
cd ~/.local/share/nvim/lazy/mini.pair
cd ~/.local/share/nvim/lazy
cd tokyonight.
nivm theme.lua
rm -rf lualine.lua
nvi
make install
bin/sarchi
make clen
make clean install
nvim config_flashy.jsonc
mv config_flashy.jsonc config.jsonc
// {\
 // "type": "gpu",\
 // "key": "âƒ´‚ âƒ´ƒ¼ó°ƒ­ƒ»",\
 // "keyColor": "green"\
 // },\

birth_install=$(stat -c %W /); current=$(date +%s); time_progression=$((current - birth_install)); days_difference=$((time_progression / 86400)); echo $days_difference days
mv config.jsonc config_longig/jsonc
mv config.jsonc config_longig.jsonc
cd .coinfig
nvim config_longig.jsonc
]7440u
set ve
man ste
man set
KKJLKclls
cd projects/`
mkdir neosed
nvim nsed.h
nvim nsed.hh
nvim nsed.c
cmatrix
chmod +x .local/goodnight
nvim .local/goodnight
mv goodnight bin
cd projects/]
nvim nsed.conf
mkdir fileBitchin
ls+
fast
nvim main_CC.cc
cdlcea\\
cd
cd projects/c
keshav
cleaqr
cd fileBitchin
nvim file.conf
which clear
E3
cd proj
gcc main.c -o mai
vim main.c
man stdlib
man getnev
man getenv
getenv
echo $TERM | grep -
echo $TERM | awk '{print $2}'
echo $TERM
which ehco
which echo
where echo
nvim kitty-binds.txt
kitten
resource
nvim tmu

wxit
xxexit
excit
texit
wxizr
cd nvim/c
llexit
nvim ~/.zsh_history
c;
l;s
sudo pacman -Rns xournalpp
;ls
tmux set @tokyo-night-tmux_window_id_style digital\
tmux set @tokyo-night-tmux_pane_id_style hsquare\
tmux set @tokyo-night-tmux_zoom_id_style dsquare
lx
rm -rf tokyo-night-tmux
cd tp
cd .tpm
nvim tmux_setup.lua
time nvim .zshrc
cd lazy]
cl;ear
cd tokyo
tmux source ~/.config/tmux/tmux.conf
tmux -a
man tmux
tmux kill-window -a
tmu
cd tmu
cd tmux-s
cd tmux-sp
cd tmux-split-statusbar
nvim tmux-split-statusbar.tmux
cd scr
cd screenshots
cd neosed
cd. .
nvim stylua.toml
cd .cofngi
cl;ar
cd .local/share/nvim/lazy/tokyonight.nvim/lua/tokyonight/colors
rm -rf tokyonight.cloning
rm -rf tokyo-night.cloning
als
nvim lazy.lua
cd p
../
.
..
rm -rf tpm
cd ~/
rm -rf .tmux
git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm
rm -rf tmux-powerline tmux-sensible tmux-split-statusbar
rm -rf tmux
rm -rf *
tmux/plugins/tpm
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
rm -rf plugins
$ sudo ln -s /usr/local/bin/tmux /usr/bin/tmux
sudo ln -s /usr/local/bin/tmux /usr/bin/tmux
cd per
tmux new -s "tsm"
mkdir tsm
cd tsm
nvim tsm.c
chmod +x tmux-sessionizer
find ~/projects ~/Programming ~/.config -mindepth 1 -maxdepth 1 -type d
find ~/projects ~/Programming ~/.config -mindepth 1 -maxdepth 1 -type d | fzf
find ~/projects ~/Programming ~/.config -mindepth 1 -maxdepth 1 -type d | cut -d '/' -f4-
find ~/projects ~/Programming ~/.config -mindepth 1 -maxdepth 1 -type d | cut -d '/' -f4- | fzf
find $HOME/projects $HOME/Programming $HOME/.config -mindepth 1 -maxdepth 1 -type d 2>/dev/null\

nvim nsed.cc
cca
~/.local/bin/tmux-sessionizer
curl cht.sh/c++
curl cht.sh/c
curl cht.sh/c/100
curl cht.sh/clang
cea\cdclear
chmod +x csc
./cs dsjf
curl cht.sh/number+of+arguments+in+shell+script
lw
./cs clear clear clear
./cs clear clear
curl cht.sh/list
curl cht.sh/programming
curl -s https://cht.sh/:cht.sh | sudo tee /usr/local/bin/cht.sh && sudo chmod +x /usr/local/bin/cht.sh
cht.sh clear
chsh --help
curl cht.sh/:list | wc -l
cclear my shit | wc -w
echo "Clear my shit" | wc -w
echo "Clear" | wc -w
./cs clear the screen
./cs "clear the screen"
rm -rf cs
chmod +x cs.cc
chmod -x cs.cc
gdb cs
rm -rf main*
gcc clear.c -o clear
celaer
nvim cs.cc
clang++ cs.cc -o cs
./cs clear
clang++ cs.cc -o cs -ggdb
curl cht.sh/Programming+Languages
sudo pacman -S rlwrap
rm -rf cs*
curl cht.sh/:list | fzf
cht.sh
cht.sh/list
cht.sh list
cht.sh :list
cht.sh :list | fzf
cht.sh :languages
curl cht.sh/:languages
curl cht.sh/:languages\

chmod +x cs
curl cht.sh/go/:list
curl cht.sh/go/:learn
curl cht.sh/go/:learn | less
curl cht.sh/go/:learn | bat
curl cht.sh/cpp/:learn | bat
clcd
curl cht.sh/language
curl cht.sh/languages
curl cht.sh/:list
curl cht.sh/:list | grep "Languages\

curl cht.sh/cpp/substr
curl cht.sh/cpp/substr | bat
curl -s cht.sh/:list | grep -E '^[a-zA-Z]+$'\

curl -s cht.sh/:list | grep -E '^[a-zA-Z]+$' | bat\

curl -s cht.sh/:list | grep -E '^[a-zA-Z]+$'
;5A;5A;6A;2A;2A;3A;3Akkjhhh]
set vim
chmod -x cs
./c
.c/s
nvim cs
./cs
curl cht.sh/vim/t
curl cht.sh/vim/
curl cht.sh/vim
curl cht.sh/vim~f
curl cht.sh/vim~f | bat
curl cht.sh/vim~i
nvim rofichange.sh
tb:q
eit
cat
vim .vimrc
,
nvim fuck.lua
rm -rf fuck.lua
rm main.c
+ls
nvim sarchi.cpp
rm clear.c clear some TODO todo.txt
cleear
cp ~/.config/tmux/tmux.conf tmux
cp ~/.zshrc zsh
cp ~/.config/nvim/* nvim/*
cp -r ~/.config/nvim/* nvim/*
cp ~/.config/nvim
cp -r ~/.config/nvim ./
man gnustow
sudo pacman -S stow
man stow
git commit -m "Added tmux config and changed nvim"
cp -r ~/.config/fastfetch fastfetch/
cd fastfetch
rm -rf config_longig.jsonc
fastfetch --theme
fastfetch --config
fastfetch --config config.jsonc
cd img
sxiv desktop.png
nvim termnvim.png
sxiv termnvim.png
git commit -m "Added fastfetch and changed images"
cd .cinfg
cd plugins/
nvim stt
nvim mini_pairs.lua
nvim miniNvim.lua
mv miniNvim.lua mini_files.lua
nvim mini_icons.lua
rm -rf mini_icons.lua
tokei
lcearclear
nvim -u NONE kitty.conf
nvim .zshrc]
nvim binds.lua n
nvim scratch
mv scratch scratch.lua
nvim scratch.lua
rm -rf scratch.lua
nvim neotree.lua
nvim *
killall flameshot
man gvim
man uptime
vim -u NONE file.txt
vim -u NONE file.c
nviclear
gcc main.c
clang main.c
nvim mini_files.lua
cd color
cd components
nvim run_command.
nvim run_command.c
nvim util.c
find / -type file stdio
curl cht.sh/core-utils/file
curl cht.sh/core-utils/find
curl cht.sh/find
find / -type file
find root_path -type file
find ~/ -type file
curl cht.sh/find | bat
find . -type f
find / -type f
find / -type f -iname "stdio"
find / -type f -iname "stdio" > /dev/null
fd / -type f -iname "stdio" > /dev/null
fd / --type f -iname "stdio" > /dev/null
fd / --type file -iname "stdio" > /dev/null
fd / --type file "stdio" > /dev/null
fd / --type file "stdio"
fd / --type file
fd ROOT --type file
fd root --type file
cd proc
cd pressure
nvim cpu
nvim memory
nvim irq
nvim io
cd deepseek
cd de
cd DeepSeek-V3
nvim DeepSeek_V3.pdf
nvim LICENSE-
nvim LICENSE-CODE
cd.
rm -rf deepseek
cd .confoig
curl cht.sh/tmux
nvim tmux_new.sh
man env
vim rofichange.sh
nvim some.txt
bat ~/.gitcofig
man bat
git statu
git status LICENSE
git status tmux
git status .git
git status lcear
nvim clear.md
rm -rf ad
rm -r ad
rm -r clear.md
git long --oneline
git log --oneline --parents
git log --oneline --parents --graph
find .git | grep 30
nvim .git/objects/30/76274157460432189d641ea79fa836618604bf
for i in /*; do echo $i; find $i |wc -l; done\

xxd]~
xxd .git/objects/30/76274157460432189d641ea79fa836618604bf
git cat-file -p .git/objects/30/76274157460432189d641ea79fa836618604bf
git cat-file -p $(cat .git/objects/30/76274157460432189d641ea79fa836618604bf)
j
nvim .config/kitty/kitty
nvim .config/kitty/kitty.conf
git cat-file -p $(cat .git/objects/30/76274157460432189d641ea79fa836618604bf) | bat
find .git | grep 3076
xit
nvim ~/.local/bin/tmux-sessionizer
git cat-file -p 86a7e4d
git cat-file
git one
nvim /dev/null
git cat-file -p 3076274
git cat-file -p 0441549
git cat-file -p 04415459
git cat-file -p 56f31a
git cat-file -p bf6d4d9c
git config --list --global
git config --get name
git config --get core.bare
git config --get user.name
git config --get user.name --local
git config --get user.name --global
git config local --list
git config --list
git config --list local
git config --list --local
git --version
mkdir testgit
cd tet
git branch -m realFuker
branch
cd testgit
git config --add --local init.defaultBranch mani
git branch -m mani
git log --decorate
git log --decorate --oneline
git log --decorate=full --oneline
git log --decorate=full
git log --stat
git log --stat --oneline
git config --local init.defaultBranch main
git branch list
man git-branch
git --list branch
git branch --list
git add contents.txt
git commit -m "A: Added contents"
git config --add --local init.defaultBranch main
git config --add --local web.class Hero
git config --get web.class
git config --get web
git config --get-all web
git config --set web
git config --set web.class Zero
man git-config-set
git config --set web.clear clear
git config --set --local web.clear clear
man -
git config --rename-section web clear
git config --get --local clear.class
git config --set web.clear
git config --set web.clear fdsf
git config --set
git config set clear.class zero
git config get clear.class
git config add-section clear
git config --set add
git config --local set clear
man git-config
git config add clear
git config add clear.class zero
git config add --local web.clx o
git config set clear.cls clear
git config unset clear.cls
git config set clear.ce
git config set clear.super
git config set clear
git config set clear.clear
git config set --local clear.clear
git config unset-all clear
git config set --local clear.cls doCls
git config remove-section clear
nvim contents.txt
nvim mm
nvim mamke_dir
git notes
git config set advice.addEmptyPathspec flase
git config set advice.addEmptyPathspec flalse
git config set advice.addEmptyPathspec false
git config --local lsist
git config --local list
git config list
git config list --local
git
git add mamke_dir
git commit -m "B: Added mame_dir"
git switch -c new_branch
nvim cllear.txt
git add cllear.txt
git commit -m "C: Added cllear.txt"
git log --oneline --graph --parents
git log --oneline --graph --parents --no-pager
git --no-pager log --oneline --graph --parents
git log --oneline --graph --parents --decorate
git log --oneline --parents --decorate
git log --oneline --parents --decorate --grapyh
git --no-pager log --oneline --graph --parents --decorate
man git-no-pager
git checkout new_branch
nvim make_me_clear.txt
git add make_me_clear.txt
git commit -m "D: Added make me clear .txt"
git log --graph --oneline
git log --graph --oneline --decorate
git log --graph --oneline --decorate --parents
git log --graph
git log --graph --decorate
git log --graph --decorate=full
git merge --no-ff
git merge --no-ff new_branch
cklear
rlce
arlcea
rlcea
rcear
]
]cklewar
c;lear
nvim main_some.txt
c,
git add main_some.txt
git commit -m "E: added main some .txt"
man git-push
git log --graph --all --decorate
git switch new_branch
nvim wornk.txt
git add wornk.txt
git contents.txt -m "F: Added wornk.txt"
git commit -m "F: Added wornk.txt"
git merge new_branch
git log --oneline --parents --decorate --graph --stat
git log --oneline --parents --decorate --graph
git branch -d new_branch
git checkout -n clear
git checkout -b clear
git switch main
git branch -d clear
log
man log
log clear
log --help
log l
log "clear\
"
which log
where log
whichis log
whereis log
bindkey -v
git log --oneline | grep D: | xclip
git log --oneline | grep D: | xclip -c
git log --oneline | grep D: | xclip -i
git log --oneline | grep D: | xargs xclip -i
git log --oneline | grep D:
git log --oneline | grep D: | cut -f
git log --oneline | grep D: | cut -f1
git log --oneline | grep D: | cut -f2
git log --oneline | grep D: | awk '{print $1}'
man xclip
git log --oneline | grep D: | awk '{print $1}' | xclip
git log --oneline | grep D: | awk '{print $1}' | xclip -o
git log --oneline | grep D: | awk '{print $1}' | xclip -i
git switch -c clear $(xclip -o)
git log
clae
nvim two stuf
git add two
git commit -m "G: I dont know"
git add stuf
git commit -m "H: I know"
git log --oneline --graph --all
git checkout clear
git merge clear
rm -rf git
mkdir git
lc;
arclear
mkdir weblyx
mkdir weblyx-local
nvim files.cd
git config set --local init.defaultlBranch main
nvim confi
git config unset --local init.defaultlBranch main
git config unset --local init.defaultlBranch
rm -rf .igt
git add files.cd
git commit -m "Added to main"
cd weblyx
git remote origin ../weblyx
git remote add origin ../weblyx
a
attach
cdcls
cd git
cd weblyx-local
man bluetoothctl
git update
git fetch update
git update-ref
git merge origin/main
git log --oneline
c;e
mkdir apars
rm -rf apar
rm -rf a[arse apars
rm -rf apars aparse
mkdir cparse
cd cparse
git remote add origin https://github.com/Keshavig/cparse.git
git pull origin main
git commit -m "Batman"
git switch -c random
cd .igt
cd .git
find exclude
find exclude -type file
fd . --type file -name exclude
fd . --type file
fd . --type file | grep exclude
cd info
nvim exclude
git checkout random
nvim args_test.c
make args_test.c
make args_test.c -o args
clang args_test.c -o args
./args
./args hello
./args "hello"
./args "hello\n"
./args "hello\r\n"
./args hello\r\n
./args hello\n
./args hellon
nvim rando.c
kitty-reload
fzf
fzf ~/projects
fzf "~/projects"
man fzf
fzf --algo=v1
/dev/random
sudo /dev/random
cd /dev
./zero
sudo ./zero
./stderr
sudo ./stderr
./wmi
sudo ./wmi
ls | grep stdout
cd /proc/self/fd
cd /dev/pts
nvim 1
nvim 0
nvim ptmx
nvim clear.cs
nvim main.cs
cc main.cs -o main
clang main.cs -o main
man clang
cleawr
cd .local/share/nvim/lazy/
celwar
clewar
git clone https://github.com/tiagovla/tokyodark.nvim.git onedark
cd onedark
]clear
nvim telescope
nvim cmp
rm -rf man7438u7439u7435u7436u7438u^;5 ~
7;2~x
rm -rf TExt main.cs lc go todo.txt upp
rm -rf todo.txt
sudo pacman -S go
git clone https://github.com/NvChad/base46.git base
cd base
nvim color
nvim colors.lua
cd tokyodark
nvim highlights.lua
nvim palette.lua
nvim term.lua
cd in
cd integrations
nvim nvcheatsheet.lua
rm -rf tokyodark
cd niv
dmesg -w
nvim base46.lua
cd .local/share/nvim/lazy/base46
nvim in
cd .local/share/nvim/lazy
cd base46
nvim glassy.lua
nvim ~/.config/nvim/lua/plugins/base46.lua
rm -rf base46.lua
nvim whichKey.lua
mv ~/.config/nvim ~/backup/nvim_backup_lazy
git clone https://github.com/NvChad/starter ~/.config/nvim && nvim
cd nivm
xclear
nvim ~/.config/kitty/themes/onedark.conf
nvim chadrc.lua
cd configs
nvim lspconfig.lua
clearl
nvnim clear
nvnim cear
cp -r ~/backup/nvim_backup_lazy ~/.config/nvim
cd tnux
cd th
nvimm
cd plugins/c
cclecclear
ealr
lua str
nvim random.lua
lua random.lua
rm -rf random.lua
cd Sp
tmux kill-session
tmux kill-session -a
gpick
cd lazy
df -
df -i .
df -i
man df
cd tokyonight.lua
nvim tokyonight.lua k
cd groups
nvim kitty.lua
diff Tokyonight_Night.conf tokyonight_night.conf
nvim Tokyonight_Night.conf
mv Tokyonight_Night.conf tokyonight_night.conf
rm -rf README.md
rm -rf LICENSE
nvim lazy-lock.json
nvim lazyvim.json
nvim colorizer.lua
mv colorizer.lua colorizer_old.lua
mv colorizer_old.lua ../
git rev-parse
git rev-parse --abbrev-ref
git branch | grep *
git branch | grep "*"
git branch | grep "*" | awk '{print $2}'
git branch | grep "*" | awk '{print $2}' | tr -d ' ' '\n'
git branch | grep "*" | awk '{print $2}' | tr -d ' '
pwd | sed "s|$HOME|~|g""\

pwd | sed "s|$HOME|~|g"
git rev-parse --abbrev-ref HEAD 2>/dev/null
git branch | grep "*" | awk '{print $2}' | tr -d ' ' | tr -d '\n'
git branch | grep "*" | awk '{print $2}' | tr -d ' ' | tr -d '\n' 2>/dev/null
cleaclear
mv ~/.config/nvim/lua/plugins/mini_hipatterns.lua ../
nvim config.lua
mv mini_hipatterns.lua ~/
nvim hsluv.lua
nvim types.lua
mv ~/mini_hipatterns.lua ~/.config/nvim/lua/plugins
nvim ~/.config/nvim/lua/plugins/mini_hipatterns.lua
cle
nvim init.lua
aclear
cd lu
source
cd dot
nvim dotfiles
nvim Wryan.conf
cd the
nvim tokyonight-night.lua
sou
cd .connofig
nvim tokyonight-storm.lua
nvim mini_
nvim mini_hipatterns.lua
cd .coinifig
nvim .lazy.lua
vim _tokyonight.lua
ce
arc
man ssh
tmux new -s "Crazy"
echo "Crazy here"
cd .tux
cd .tmux
cd tpm
./tpm
./tpm update
./tpm install
./run_test
cd scripts
./install_plugins.sh
./update_plugin_prompt_handler.sh
./clean_plugins.sh
bash -c check_tmux_version.sh
bash -c ./check_tmux_version.sh
sh -c ./check_tmux_version.sh
fish -c ./check_tmux_version.sh
nvim check_tmux_version.sh
./check_tmux_version.sh
./source_plugins.sh
./update_plugin.sh
nvim update_plugin
nvim update_plugin.sh
cd helpers
nvim plugin_functions.sh
tmux new -s "Nvim"
time fastfetch > /dev/null
time fastfetch
time colorscript -r
where colorscript
/sbin/colorscript
/sbin/colorscript -r
nvim nvim_notify.lua
sccl
cd .local/share/nvim/lazy/tokyonight.nvim
cd lualine
nvim _tokyonight.lua
nvim lualine_tokyo.lua
cd cle
git clone https://github.com/Keshavig/tokyonight.nvim.git
rm -rf tokyonight.nvim
git clone git@github.com:Keshavig/tokyonight.nvim.git
git remote add upstream https://github.com/folke/tokyonight.nvim
git remove -v
git remote -v
git commit -m "Swapped bg and bg_dark for nights"
git push origin main
chmod +x update_tn
nvim update_tn
./update_tn
~/.local/bin/update_tn
git push origin main --force
rm -rf ~/.local/share/nvim/lazy/tokyonight.nvim
cd -
man cd
cd --help
nvim ~/.local/bin/update_tn
rm -rf colorizer_old.lua
nvim VimBeGood.lua
rm -r VimBeGood.lua
zellij
sudo pacman -S zellij
nvim noice.lua
nvim tmux/tmux.conf
dclcear
rm -rf lualine_tokyo.lua
nvim autocmds.lua
tmux new -s "Zen"
vim zen_mode.lua
nvim zen_mode.lua
rm -r zen_mode.lua
rm -rf cparse c_lexer guiMusicPlayer LearningAsm linkedListsVsArray musicPlayer neosed new_sarchi.cpp practice
colorscript -r
exec dmenu_run -nb '#1e1e1e' -sf '#1e1e1e' -sb '#f4800d' -nf '#F4800d' \
\
\

dmenu_run -nb '#1e1e1e' -sf '#1e1e1e' -sb '#f4800d' -nf '#F4800d' \
\
\

dmenu_run -nb '#1e1e1e' -sf '#1e1e1e' -sb '#f4800d' -nf '#F4800d' -p "Search: " -h 5
dmenu_run -nb '#283c24' -sf '#283c24' -sb '#51afef' -nf '#a9a1e1' -p "Search: " -h 5
dmenu_run -nb '#283c24' -sf '#283c24' -sb '#51afef' -nf '#a9a1e1' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font:10"
dmenu_run -nb '#283c24' -sf '#283c24' -sb '#51afef' -nf '#a9a1e1' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font:10" -l 5
git clone https://gitlab.com/dwt1/dmenu-distrotube.git
makepkg -cf
dmenu
dmenu_run -center -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font:10" -l 5\

dmenu_run -center -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font:10" -l 5
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font:10" -l 5
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font:8" -l 5
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font-8" -l 5
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font-10" -l 5
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font-10" -l 10
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font-10" -l 10 -nhb "#dfdfdf"
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font-10" -l 10 -nhb "#98be65"
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font-10" -l 10 -nhb "#c0caf5"
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font-10" -l 10 -nhb "#16161e"
dmenu_run -c -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font-10" -l 10 -nhb "#545c7e"
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font-10" -l 10 -nhb "#545c7e"
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font-10" -l 10 -nhb "#545c7e" -bc "#1afef"
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font-10" -l 10 -nhb "#545c7e" -bc "#51afef"
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font-10" -l 10 -nhb "#545c7e" -sb "#51afef"
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font-10" -l 10 -nhb "#545c7e" -bw 3
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font-10" -l 10 -nhb "#545c7e" -bw 1
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sb '#7aa2f7' -sf '#1a1b26' -p "Search: " -h 5 -fn "JetBrainsMono Nerd Font-10" -l 10 -nhb "#545c7e" -bw 2
cd ~/.local/bin
chmod +x dmenuRun
rm -rf ~/.emacs.d
nvim ~/.config/suckless/dwm/colorschemes/tokyonight-night.h
nvim ~/.config/suckless/dwm/colorschemes/config.h
nvim ~/.config/suckless/dwm/config.
nvim ~/.config/suckless/dwm/config.h
dm
rm -rf some.txt tmux_new.sh
./kat
kat wallpaper.sh
nvim gfw
./sarchi
nvim mt
lolcat pp
man lolat
nvim tokyonight-night.h
dmenu_run
nvim dwm.c config.h
emacs
/usr/bin/emacs
nvim dwm.c
nvim doom-one.lua neotree.lua
nvim doom-one.lua
colorscript -a
colorscript -b tux
colorscript -b xmonad
colorscript -b rupees
colorscript -b pukeskull
colorscript -b print256
colorscript -b mouseface2
colorscript -b kaisen
colorscript -b hex
colorscript -b guns
colorscript -b doom-outlined
colorscript -b doom-original
colorscript -b debian dna
colorscript -b debian
colorscript -b dna
colorscript -b colorview
colorscript -b colortest-slim
colorscript -b colortest
colorscript -b colorbars
nvim /usr/bin/colorscript
nvim /sbin/colorscript
cd /opt/shell-color-scripts
cd colro
cd completions
nvim _colorscript
nvim colorscript.fish
cd colorscripts
nvim bloks
colorscript -h
colorscript -e blok
colorscript -e bloks
./bloks
sudo nvim bloks
colorscript -b bloks
colorscript -b blocks2
colorscript -b awk-rgd-test
colorscript -b awk-rgb-test
colorscript -b 00default.sh
tmux new -s "Development"
nvim .zshr
mkdir ReadFile
cd ReadFile
curl cht.sh/c/file
curl cht.sh/c/file | bat
curl cht.sh/c/file+opening
curl cht.sh/c/how+to+open+a+file
nvim fileStruct.fs
nvim kitty
mkdir Newton
cd Newton
nm
man nm
nvim newton.data
make newton.
make newton.cc
clang++ newton.cc -o newton
./newton
mkdir ideas
mkdir newton
cd newton
nvim Replace_x
git config add --local init.defaultBranch main
git config add init.defaultBranch main
git config set init.defaultBranch main
cd pl
starship init
starship init zsh
starship config
starship zsh
starship
starship completions
starship toggle
starship prompt
time ff
p10config
p10k config
nvim rainbow-delimiters.lua
lsn
p10k configure
__
_clear
=clear
which colorscript
sudo nvim /sbin/colorscript
man cc
cc
\ufb13
printf "\ufb13"
PROMPT="ó°£ƒ§ %F{blue}%~%f %# "\

zh
zsh -u
nvim .p1
cdc
nvim .p10k.zsh
printf "\uF126 "
rm -rf .p10k.zsh
starship preset nerd-font-symbols -o ~/.config/starship.toml
mv ~/.config/starship.toml ~/.config/starship_tkn.toml
starship preset jetpack -o ~/.config/starship.toml
autoload -Uz promptinit && promptinit\
prompt starship $ZSH_THEME
kfsjldsf
cd .conf
ls -al | wc -l
lsfkjsdf
skcjsa
kdfsjdf
sklfjsdf
kclkear
starship preset no-empty-icons -o ~/.config/starship.toml
kasdjfd
aksdfj
starship preset pastel-powerline -o ~/.config/starship.toml
ksadf
kajf
starship preset tokyo-night -o ~/.config/starship.toml
kasfjlf
kasdfj
kdasjf
ksdjf
kdsjf
suclear
ksfjsfd
lsfjdslf
ksfj
slfk
cleakjr
sudo pacman -Rns starship
man lxsession
lxsession
sudo pacman -S qtile
mkdir ~/.config/qtile
cp * ~/.config/qtile
cp -r * ~/.config/qtile
nvim autostart.sh ~/.dwm/autostart.sh
sudo pacman -S qtile-extras
sudo pacman -S qtile-extra
yay -S qtile-extras-git package
yay -S qtile-extras-git
memusgae
cd SP
cd sarchi
nvim sarchi.hpp
free | awk '/Mem:/ {printf(\"%.2f\\n\", $3/$2 * 100)}' | tr -d '\n'
free | awk '/Mem:/ {printf("%.2fn", $3/$2 * 100)}' | tr -d '\n'
free | awk '/Mem:/ {printf("%.2f", $3/$2 * 100)}'
kitty -e htop
cpuperc
sh -c cperc
qtile restart
qtile start
rm -rf README.org icons
rm -rf __pycache__
rm -rf colors.py
python3 config.py
python3 qtile start
cd .qtile
qtile
brav
sudo pacman -S rsyn
sudo pacman -S rsync
bash <(curl -s "https://end-4.github.io/dots-hyprland-wiki/setup.sh")
rm -rf .emacs*
rm -rf .Xresources .wget-hsts .Xauthority htdocs
nvim .xinitrc
startx
pacman -S --needed git base-devel\
git clone --depth 1 https://github.com/HyDE-Project/HyDE ~/HyDE\
cd ~/HyDE/Scripts\
./install.sh
./chaotic_aur.sh
./chaotic_aur.sh install
./chaotic_aur.sh --install
sudo ./chaotic_aur.sh --install
nvim chaotic_aur.sh
cd extra
LS
killall qtile
./uninstall.sh
cd .onfig
cd slstatus
upower -i /org/freedesktop/UPower/devices/battery_BAT-1 | grep percentage | awk '{print $2}'
upower -i /org/freedesktop/UPower/devices/battery_BAT | grep percentage | awk '{print $2}'
upower -i /org/freedesktop/UPower/devices/battery_BAT1 | grep percentage | awk '{print $2}'
upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep percentage | awk '{print $2}'
nvim doom-one.h
cd ~/.config/cfg_backups
cd 250205_15h38m11s_remove
mv .zshrc ~/
mv .gtkrc-2.0 ~/
mv rofi ~/.config/
mv nwg-look ~/.config/
mv xsettingsd ~/.config/
mv gtk-3.0 ~/.config/
mv fastfetch $cdir/
mv -f fastfetch ~/.config/
mv -rf fastfetch ~/.config/
mvdir -f fastfetch ~/.config/
mvdir
man mv
mv fastfetch ~/.config/
mv fastfetch/* ~/.config/fastfetch/*
mv fastfetch/* ~/.config/fastfetch/
code
rm -rf kitty-binds.txt
mv * ~/.config/kitty
mv * ~/.config/kitty/themes/*
mv * ~/.config/kitty/themes/
sudo pacman -Rns code
cd HyDE
cd Configs
cd S
cd Scripts
nvim uninstall.sh
sddm
rm -rf /usr/share/sddm
sudo pacman -Rns zsh-theme-powerlevel10k-git-debug zsh-theme-powerlevel10k-git-debug
sudo pacman -Rns zsh-theme-powerlevel10k-git-debug zsh-theme-powerlevel10k-git
#GRUB_THEME="/path/to/custom/theme"\

sudo nvim /etc/default/grub
sudo grub-mkconfig -o /boot/grub/grub.cfg\

sudo pacman -Rns $(pacman -Qdtq)\

yay -Yc\

sudo pacman -Rns neovim
sudo pacman -Sc\

cd cloens
mkdir neovi
mv neovi neovim
git clone https://github.com/neovim/neovim.git neovim
cd gui
cd clonesc
cdclear
nvim -V1 -v
nivm .zshrc
vim .zshrc
cd ray
ping
man ping
which ping
where ping
whereis ping
man where
man zsh
make rectangle
sudo pacman -S clang
./build
clang++ rectangle.cc -o rectangle -lpthread -lraylib -ldl -lGL
./rectangle
nvim ~/.config/nvim/lua/personal/binds.lua
ping 10.00.001
ping twitter.com
cd suck
killall dwm
time clear
time clear -a
time clear -T
clear -h
clear -T alacritty
alacritty
nvim alacritty.toml
nvim rectangle
clang++ main.c -o main
./Programming/Popen/main
cd po
cd Popen
gcc main.c -o main
vim --versin
vim --version
-lpthread
pthread
nvim ~/projects/SP/sarchi/source/shellcmd.cpp
rm -rf '&& quit' +quit 'and quit'
nvim cmd.cpp
make cmd
./cmd
man sigint
man stack_overflwo
man segmentation_fault
curl cht.sh/c/fgets | bat
curl cht.sh/c/fgets
curl clear
man curl
ping myding
mkdir random
cd random
nvim assert.cc
mv assert.cc assert.c
man assert
curl cht.sh/c/assert
make assert
./assert
nvim assert.c
tmux new -s "Meelu"
git config set --local ininit.defaultlBranch main
git config unset --local ininit.defaultlBranch main
git config unset --local ininit.defaultlBranch
git config set --local init.defaultBranch main
mkdir meelu
nvim the_dos.md
nvim meelu.hh
nvim expr.tpp
nvim expr.ttp
nvim expr.ini
nvim meelu.tpp
man init
mtime
cd ideas
mkdir tmux
nvim dothis.md
@load time
gettimeofday()
gettimeofday
gwak
gawk
gawk '@load time'
gawk '@load "time"'
gawk '@load "time" printf "%g", gettimeofday()'
gawk '@load "time";printf "%g", gettimeofday()'
gawk '@load "time"' 'printf "%g", gettimeofday()'
man gawk
gawk --file awk
tmux new -s "snake"
mkdir snake
cd snak
cd snake
nvim rectangle.c
clang++ snake.cc -o snake -lpthread -lraylib -ldl -lGL
./snake
bl
cd nvnim
nvim tokyodark.lua
nvim snake.cc
kjkc
earlc
quit
t
sleep 5
while true; do ./cperc done
while true; do cperc done
while true\
echo hi\
sleep 2
man chmod
sudo make clean
nvim scripts.lua
while true\
do\
echo hi\
sleep 2\
done
;5A;A5
,:q
clang++ main.cc -o main && ./main
if ff
uptime -h
uptime -s
uptime -p | awk '{print $2}'
r=uptime -p | awk '{print $2}'
r=r=uptime -p | awk '{print $2}'!
nvim check.hpp
nvim check.cpp
nvim meelu.hpp`
nvim meelu.hpp
mv meelu.hpp meelu.h
mv check.hpp check.h
nvim meelu.cpp
nvim meelu.h
nvim parse.h
find . -maxdepth 1 -type f -executable\

find . -maxdepth 1 -type f -executable | tr -d '\t'\

find . -maxdepth 1 -type f -executable | tr -d '\n' ''
find . -maxdepth 1 -type f -executable | tr -d '\n' ' '
find . -maxdepth 1 -type f -executable | tr -d '\n'
fd . -maxdepth 1 -type f -executable | tr -d '\n'
findd . -maxdepth 1 -type f -executable | tr -d '\n'
nvim ~/.local/bin
ping youtube.com
rm -rf main.cc main main.rs
rm -rf .gef-2025.01.py
nvim .nf
rm -rf .nf
ea
nvim -u minimal_init.lua
nvim parse.
vim -v
nvim --version
rm -i check*
nvim basic_checks.h
nvim Replace_x.txt
nvim newton.cc
mv ~/.config/nvim ~/backup/NVIMBACKUPKDJFKDKFJ
bash <(curl -s https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/install.sh)
cd raylibProjects
nvim rectangle.cc
LV_BRANCH='release-1.4/neovim-0.9' bash <(curl -s https://raw.githubusercontent.com/LunarVim/LunarVim/release-1.4/neovim-0.9/utils/installer/install.sh)
lvim rectangle.cc
bash ~/.local/share/lunarvim/lvim/utils/installer/uninstall.sh
lvim
rm -r ~/.local/share/nvim
git clone --depth 1 https://github.com/AstroNvim/template ~/.config/nvim\
rm -rf ~/.config/nvim/.git\
nvim
rm -rf ~/.config/nvim
rm -rf ~/.local/share/nvim
rm -rf ~/.local/state/nvim
rm -rf ~/.cache/nvim
cp -r ~/backup/NVIMBACKUPKDJFKDKFJ ~/.config/nvim
rm -rf neovim
git clone https://github.com/neovim/neovim.git neovim --depth 1
cd neovim
cmake
make CMAKE_BUILD_TYPE=RelWithDebInfo\
sudo make install
rm -ri *.cc
rm -ri *.cpp
rm -ri main*
./fehbg
cd meelu
vim parse.cpp
vim clear
mv clear clear.c
vim clear.c
make clear
nvim clear.c
nvim ~/.local/bin/dele
nvim ~/.local/bin/delex
fclear
delex --force
cd .dwmm
cd dw
curl google.com/who+is+robert+capa
curl google.com
curl www.google.com
curl www.google.com/who+is+robert+capa
mv meelu simex
sime
meelu
feelu
veelu
nvim parse.cp
mkdir plya
cd plya
cd prom
mv meelu.h simex.h
mv meelu.cpp simex.cc
rm -rf meelu.tpp
nvim parse.cpp
mv main.cpp main.cc
./mai
nvim ../src/main.c
nvim simex.cc
make test
nvmim test.cc
make test && ./test
lcea
exi
delex
curl https://github.com/LazyVim/LazyVim/blob/main/lua/lazyvim/config/options.lua\

make main && ./main
echo "\a"
kitty -U
kitty --start-as minimized
sudo pacman -Syyuw
sudo pacman -Qqtq
sudo pacman -Qqtd
pacman -D
sudo pacman -D
pacman -Qqdq
yay -Syuu
nvim -u NONE
nvlc
pacman -Qdt
yay -Rns pacman -Qdt
sudo pacman -Rns $(pacman -Qdtq)
cd simex
sudo pacman -S hyprland
gcc -v
clang -v
clang --version
yay -S ninja gcc cmake meson libxcb xcb-proto xcb-util xcb-util-keysyms libxfixes libx11 libxcomposite libxrender pixman wayland-protocols cairo pango libxkbcommon xcb-util-wm xorg-xwayland libinput libliftoff libdisplay-info cpio tomlplusplus hyprlang-git hyprcursor-git hyprwayland-scanner-git xcb-util-errors hyprutils-git glaze hyprgraphics-git
sudo pacman -S aquamarine hyprlang hyprcursor hyprutils hyprgraphics
sudo pacman -S hyprland-scanner
yay -S hyprland-scanner
yay -S hyprland-scanner-git
sudo pacman -S hyprwayland-scanner
mkdir hypr
wofi
dmenuRn
nvim ~/.local/bin/dmenuRun
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sf '#1a1b26' -p "Search: " -g 4 -fn "JetBrainsMono Nerd Font-10" -l 14 -nhb "#545c7e" -sb "#ff9e64" -bw 2\

dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sf '#1a1b26' -p "Search: " -g 4 -fn "JetBrainsMono Nerd Font-10" -l 14 -nhb "#545c7e" -sb "#ff9e64" -bw 5
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sf '#1a1b26' -p "Search: " -g 4 -fn "JetBrainsMono Nerd Font-10" -l 14 -nhb "#545c7e" -sb "#ff9e64" -bw 10
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sf '#1a1b26' -p "Search: " -g 4 -fn "JetBrainsMono Nerd Font-10" -l 14 -nhb "#545c7e" -sb "#ff9e64" -bw 2
dmenu_run -c -nb '#1a1b26' -nf '#c0caf5' -sf '#1a1b26' -p "Search: " -g 4 -fn "JetBrainsMono Nerd Font-10" -l 4 -nhb "#545c7e" -sb "#ff9e64" -bw 2
dmenu_run -nb '#1a1b26' -nf '#c0caf5' -sf '#1a1b26' -sb '#ff9e64' -p "Search: " -fn "JetBrainsMono Nerd Font:size=10" -l 14 -bw 2\

echo -e "Option1\nOption2\nOption3" | dmenu -nb '#1a1b26' -nf '#c0caf5' -sf '#1a1b26' -sb '#ff9e64' -p "Search: " -fn "JetBrainsMono Nerd Font:size=10" -l 14 -bw 2\

dmenu_run -p "Search: " | sh\

echo $PATH\

pkill dmenu\

killall dmenu
sudo pacman -S dmenu
cd dmenu-distrotube
sudo pacman -Rns dmenu
sudo make clean install
dmenu_run\

cp -r nvim ~/github/dotfiles
cp -rf kitty ~/github/dotfiles/
cp -rffff kitty ~/github/dotfiles/
update_n
dc d
dclear
rm -rf HyDE
runDmenu
dclea
nvim dmenuRun
brake
brave
sh
sudo pacman -S waybar
mkdir waybar
nvim ~/github/tokyonight.nvim/lua/tokyonight/colors/storm.lua
nvim ~/.local/bin/hyprStart
mkdir aightConfig
mv config style.css aightConfig
cd aightConfig
mv config aightConfig
rm -rf style.css
nvim ~/.config/suckless/slstatus/colorschemes/tokyonight.h
nvim modules.json
rm -rf config.jsonc modules.json style.css
nvim mouse.sh
chmod +x mouse.sh
killall waybar && waybar &
nvim config.json
free -h
mkdir modules
cd mo
./storage.sh
./storage.sh -p
./storage.sh --percentage
lsblk
lsblk -p
lsblk -percentage
nvim storage.sh
df -h
kitty -c htop
kitty -s htop
man kitty
ckear
hyprctl workspaces -j | jq -r '.[] | .name'
hyprctl workspaces -j
hyprctl workspaces -a
hyprctl workspaces -p
waybar
printf '1\n2\n3\n4\n5\n6\n7\n8\n9'
printf '1\n2\n3\n4\n5\n6\n7\n8\n9\n'
exigt
hyprctl workspaces
hyprctl workspaces -h
hyprctl workspaces -h --list
hyprctl workspaces -h --all
cd hyr
xprop
sudo pacman -S hyprpaper
sudo pacman -Syyu hyprpaper
nvim ~/.cache/wal
nvim ~/.cache/wall
hyprctl
hyprStart
sudo pacman -S annonator
sudo pacman -S knip
sudo pacman -S ksnip
ksnip
sudo pacman -Rns ksnip
sudo pacman -S grim
sudo pacman -S slurp
grim -g "$(slurp)" screenshot.png\

cp config.jsonc ../config_back.jsonc
gn
hyprland
man hyprpaper
hyprpaper --help
nvim paper
./paper
sudo pacman -S waybar-hyprland
yay -S waybar-hyprland
mkdir default
mv /etc/xdg/waybar/* default
sudo mv /etc/xdg/waybar/* default
man sudo mv /etc/xdg/waybar/* default
man "man sudo mv /etc/xdg/waybar/* default"
cd default
mkdir rn
rm -rf mouse.sh
mv config.jsonc style.css rn/
mv default/* ../
mv config.jsonc style.css waybar
chown config.jsonc
chown --help
chown config.jsonc ke
chown config.jsonc ke:wheel
chown ke config.json
chown ke config.jsonc
cd rn
mv config.jsonc style.css default
cp rn/* ./
nvim disableEnable.lua
rustup install rustfmt
rustup add rustfmt
rustup -h
rustup component add rustfmt
rustfmt --edition 2021
nvim c
rustfmt --edition 2021 main.rs
rustfmt --edition2021
rustfmt --edition --edition 2021
nvim m
nvim conform.lua
nvim tokyonight_night.conf
nvim con
yay -S smassh-bin
man sxiv
hyprutil
hyputil
./paper &
xrandr
cd hypr/
nvim theme_tokyonight.conf
rm -rf theme_tokyonight.conf
îƒ¾ƒµ\

cl
slcea
p10k
hyctl
nvim ../waybar/style.css
cp .zshrc backup/ZSHRC
yay -S --noconfirm zsh-theme-powerlevel10k-git\
echo 'source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme' >>~/.zshrc
sjafd
ïƒ¬ƒ£
nvim ~/.local/bin/reway
chmod +x ~/.local/bin/reway
nvim ../waybar/config.jsonc
yay -Rns zsh-theme-powerlevel10k
yay -Rns --noconfirm zsh-theme-powerlevel10k-git
kitty
transparency.sh on 0.98
transparency.sh on 0.95
transparency.sh on 0.97
cd sxic
mv .local/bin/transparency.sh .local/bin/transparency
sudo pacman -Rns gnome
sudo pacman -Rns gnome-session
notify-send "he"
sudo pacman -Rns dunst
cd .dwm
nvim autostart.sh
hyprctl client
nvim ~/.local/bin/ktop
chmod +x ~/.local/bin/ktop
ktop
p

sudo pacman -S wl-clipbaord
sudo pacman -S wl-clipboard
wl-pate
wl-paste
kitty --hold sh -c htop
yay -S flameshot-git
tmux new -s "hyper
tmux new -s "hyper"
windowrule = workspace 5, ^(.*Spotify.*)$\

git fetch
cd hpr
flameshot gui
cd clone
mv -r ~/.config/rofi ~/backup/ROFIBACK
mv ~/.config/rofi ~/backup/ROFIBACK
yay -S rofi-wayland
cp -r rofi ~/.config/
cd thems
nvim dtos-center
rofi -show drun
sudo pacman -S keyd\

man keyd
sudo mkdir -p /etc/keyd\
sudo tee /etc/keyd/default.conf > /dev/null <<EOF\
[main]\
capslock = esc\
EOF\

sudo systemctl enable --now keyd\

sudo keyd
keyd
nvim binds.lua
slock
sudo pacman -S ghostty
sudo pacman -Rns ghostty
rofi -show run
drun
dmenuRun
nohup st &
killall tmux
tmux -kill
tmux --kill
tmux -h
cd .apps
cd state
cd share
cd applications
nvim sxiv.desktop
cd /usr/share/applications
nvim nvim.desktop
nvim config.rasi
nvim --remote-ui .zshrc
nvim --listen .zshrc
nvim --listen ~/.zshrc
systemctl --user list-units --type=service | grep nvim\

ls ~/.config/systemd/user/\

grep -n "nvim --headless" ~/.bashrc ~/.zshrc ~/.profile 2>/dev/null\

crontab -l | grep "nvim --headless"\

kls
nvim .zsh
sudo pacman -Rns keyd
ls ~/.config/autostart/\

ps -o ppid= -p $(pgrep -x nvim)\

ps -fp 16077
ps -fp 16364
cd clones/dotfiles
nvim hypr/hyprland.conf
nvim config.h
echo -e "Chosee:\na\nb" | rofi -dmenu
find ~/projects/ ~/Programming/ ~/github/ ~/.config -mindepth 1 -maxdepth 2 -type d
find ~/projects/ ~/Programming/ ~/github/ ~/.config ~/clones -mindepth 1 -maxdepth 2 -type d
s=$(find ~/projects/ ~/Programming/ ~/github/ ~/.config ~/clones -mindepth 1 -maxdepth 2 -type d)
echo -e "$s" | rofi -dmenu -p "Choose: "
echo -e "$s" | rofi -dmenu -p "Choose:"
./nvimS
kitty --hold sh -c '/home/ke/projects/gui/src'
kitty --hold sh -c nvim '/home/ke/projects/gui/src'
kitty --hold sh -c nvim '/home/ke/projects/gui/src/main.cc'
kitty --hold sh -c "nvim '/home/ke/projects/gui/src/main.cc'"
kitty --hold sh -c "nvim '/home/ke/projects/gui/src'"
nvim nvimS
nvimS
mv nvimS nvim-sessionizer
echo
echo $TMUX
nvim-sessionizer
nvim nvim-sessionizer
killall
tmux-sessionizer -r
ext
nvim tmux-sessionizer
ags
sudo pacman -S ags
time -t
clock
date
cd suckless
cd slstatus/
cd /sys/class/power_supply
pw-volume
pwpctl status\

wpctl status\

wpctl get-volume @DEFAULT_AUDIO_SINK@\

wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print $2}'
wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print $2*100}'
pamixer --get-volume
nvim tokyonight.h
rm -rf default rn
cd modules
rm -rf modules
mkdir dwm
cp config.jsonc style.css dwm
cp ~/clones/dotfiles/.config/waybar/* ./
mkdir dt
mv config.jsonc style.css dt
cp dwm/* .
5clear
cdl
cd rofi
nvim dtos-center.rasi
man --list
man --usage
man -S LIST
man -S man
man -S
man -s
man -s LIST
where man
whereis clear
ls /usr/share/man
ls /usr/share/man/man1
ls /usr/share/man/man[1...5]
ls /usr/share/man/man[1...5] | wc -l
ls /usr/share/man/man1 | wc -l
ls /usr/share/man/man2 | wc -l
ls /usr/share/man/man3 | wc -l
ls /usr/share/man/man[1..5] | wc -l
ls /usr/share/man/
ls /usr/share/man/man{1..5}\

ls /usr/share/man/man{1..5}
/usr/bin/ls -l /usr/share/man/man{1..5} |
/usr/bin/ls -l /usr/share/man/man{1..5} | wc -l
ls /usr/share/man/man{1..5} | wc -l
/usr/bin/ls -l /usr/share/man/man{1..5} | awk '{print $3}'
/usr/bin/ls -l /usr/share/man/man{1..5} | awk '{print $4}'
/usr/bin/ls -l /usr/share/man/man{1..5} | awk '{print $5}'
/usr/bin/ls -l /usr/share/man/man{1..5} | awk '{print $}'
/usr/bin/ls -l /usr/share/man/man{1..5} | awk '{print $6}'
/usr/bin/ls -l /usr/share/man/man{1..5} | awk '{print $7}'
/usr/bin/ls -l /usr/share/man/man{1..5} | awk '{print $8}'
/usr/bin/ls -l /usr/share/man/man{1..5} | awk '{print $9}'
/usr/bin/ls -l /usr/share/man/man{1..5} | awk '{print $9}' | cut -d .
/usr/bin/ls -l /usr/share/man/man{1..5} | awk '{print $9}' | cut .
/usr/bin/ls -l /usr/share/man/man{1..5} | awk '{print $9}' | cut -d '.' -f1
/usr/bin/ls -l /usr/share/man/man{1..5} | awk '{print $9}' | cut -d '.' -f1 | fzf
choice=(/usr/bin/ls -l /usr/share/man/man{1..5} | awk '{print $9}' | cut -d '.' -f1 | fzf)
choice=$(/usr/bin/ls -l /usr/share/man/man{1..5} | awk '{print $9}' | cut -d '.' -f1 | fzf)
man $choice
rofi -fzf
rofi fzf
nvim readman
readman -r
tmux new -s "idk"
mkdir algorithm
mkdir shunting_yard_algo
clang++ main.cpp -o main
nvim main.cpp
nvim segfault
ng
nf
manread
readman
nl main
nl main.cpp
clang segfault.c -o segfault
make segfault
./segfault
nvim segfault.c
sct 5000
sct 500%
man sct
sct 10000
nvim brightnessMYMESS.sh
sct 6500
sct --version
sct --help
xsct clear
sudo pacman -S gammastep\

gammastep -clear
gammastep -O 2000 &
nohup gammastep -O 2000 &
nohup gammastep -O 3000
nohup gammastep -O 3000 &
gammastep -O 2500
gammastep -O 2000
gammastep -h
gammastep -O 3000K
gammastep -O 300K
killall nohup
gammastep -O 1000K -v -v -v
sudo pacman -S geoclue
gammastep -O 1000K
geoclue2
geoclue3
geoclue
man geoclue
lscl
cd algorithm
cd shunting_yard_algo
tmux new -s "stack"
cdlce
ar
cd .confg
nvim stack
clang stack.c -o stack
./stack
nvim stack.c
dc
ear
cat << EOF > cal.txt\
4 5 *\
p\
EOF\

kat << EOF > cal.txt\
4 5 *\
p\
EOF\

nvim cal.txt
rm -rf cal.txt
rm *
y
delex -r
./check
clang check.c -o check && ./check
nvim check.c
man kitten
kitten @edit
kitten edit
kitten edit .zshrc
yay -S zen-browser-bin
yay -Syyu zen-browser-bin
zen-browser
btop
tmux new -s "mex"
mkdir mex_bundles
mkdir smex
cd smex
nvim trail.c
mv trail.c trail.cc
make trail.cc
man what()
what
man what
gdb trail
nvim trail
clang++ trail.cc -o trail -ggdb
nvim tra
make trail
./trail
nvim trail.cc
mkdir objectInsideobjecg
mv objectInsideobjecg objectInsideobject
cd objectInsideobject
make oio
./oio
nvim oio.cc
CC
echo $CC
echo $COMPILER
echo $CCOMPILER
echo $C
echo $CLANG
echo $PATH
rm -rf smex
eval
xval
seval
cleval
oio
mex
mkdir lpe
touch lexer.cc lexer.hpp parser.cc parser.hpp evaluate.cc evaluate.hpp main.cc
nvim wallpaper.sh
path=$(cat ~/.cache/wall) # Man i know (CAT)\
feh --bg-fill $path &\

path=$(cat ~/.cache/wall)
feh --bg-fill $path
sudo pacman -S feh
pacman -Syu
bin
feh
sudo
nvim --remote-ui
fg --clear
bg
nvim supermann
jobs
fg %1
jobs clear
which jobs
which fg
cd lpe
colo
~/.local/bin/brightnessMYMESS.sh
sct
sct 3000
nvim dotFloat.cc
make dotFloat.cc
make dotFloat
./dotFloat
nvim test.cc
clang++ main.cc lexer.cc -o main
nvim lexer.
nvim mian.cc
gdb main
clang++ tfCin.cc -o main
nvim tfCin.cc
rm -rf tfCin.cc
nvim main
sudo pacman -S gvim
fg
mv lpe hermeth
gvim
gvim hermeth
sudo pacman -S nvim
sudo pacman -S vim
nvim enum.hp
nvim enum.
nvim enum.hpp
nvim enum.cc
mv enum.cc denum.cc
mv enum.hpp denum.hpp
make main
clang++ main.cc lexer.cc -o main -ggdb
clang
clang++ main.cc lexer.cc denum.cc -o main -ggdb
rm -rf evaluate* parser*
nvim validtokens.cc
clang++ main.cc lexer.cc denum.cc -o main -ggdb -Wall -Werror -Wpedantic
nvim dnum.cc
nvim denum.cc
nvim denmu.hpp
nvim denum.
nvim denum.hpp
ls=
cear]
sfkjdsalkfjkkladsjfkdjafw
nvim share
sfkldsajfkadsjf askfk
tmux-sessionizer
mkdir inclue
mv inclue include
mkdir play
cd play
nvim unorderd.cc
nvim shared.hpp
mkdir mament
mv mament fm
cd fmf
mkdir src
mkdir include
make --v
elar
nvim lexexc
nvim lexer.c
mv lexer.c lexer.cp
mv lexer.cp lexer.cpp
man touch
mkdir stable
cp config.jsonc style.css stable
exec waybar > /dev/null
exec waybar > /dev/null &
ccl
cd colo
nvim cclear
poweroffthis
rofi -dmenu -p "HELLO"
nvim powre
man rofi
rofi -e "FUCK"
rofi -e "CLEAR
nvim poweroffthis
nvim dwm/style.css
rm -rf include
./example ajfdlfjk
lsls
make example
mkdir backup
cp config.jsonc style.css backup
d
uname -r
cp style.css style_weird.css
nvim colors.py
nvim kit
cd waybr
ccd waybar
nvim ~/.confgi
nvim onedark.lua
ls | grep one
cd .confgi
cd kit
nvim doom-one.conf
vim
g++ example.cc operators.cpp -o example
mv operators.cpp operators.cc
nvim example.c
lccear
nvim ~/.config/waybar/style.css
checkupdates | wc -l\

checkupdate
paru -Qu | wc -l\

sudo pacman -S pacman-contrib
man yay
yay -Q
yay -U
yay -uh
yay -Pc
yay -uc
yay -ud
yay -Qu | wc -l\

cd .lolca
cd dwm
3;1:3u:q
sudodo
expect
nvim ~/.local/bin/sudodo
rm -rf ~/.local/bin/sudodo
echo "sudo" | sudo -S ls
hyprctl dispatch exec "[float] kitty --hold sh -c 'yay -Syyu'"\

hyprctl dispatch exec "[float] kitty --hold sh -c 'echo 'sudo' | yay -Syyu'"\

hyprctl dispatch exec "kitty" && sleep 0.1 && hyprctl dispatch togglefloating\

hyprctl dispatch exec "[float] kitty"\

hyprctl dispatch exec "[float] alacritty"\

hyprctl dispatch exec "[float] echo 'sudo' | sudo alacritty"\

nvim configjsonc
clang++ example.cc operators.cpp -o example
nvim ~/.local/bin/getupdates
cd .cnfig
cecd
nvim operators.cpp
3;1:3uclar
nvim operators.c
rg
rg clear
rg lexer
rg struct
man rg
cc plaything.cc -o plaything
nvim plaything.cc
g++ plaything.cc -o plaything
./plaything
rm -rf plaything*
g++
;s
cls
g++ example.cc operators.cc -o example
nvim lexer.cpp
rs
nvim tokenType.hpp
nvim operators.hpp
lt
cd tmux
nvim tmux.conf
nvim style
nvim style.cs
cd proij
cd mex_bundles
cd hermeth
nvim example
nvim ~/.config/kitty/themes/doom-one.conf
nvim ~/.config/tmux/tmux.conf
sxiv hypr
sxiv hypr.png
mkdir hyprland
cp ~/.config/hypr ./
cp -rf ~/.config/hypr ./
cp ~/.config/waybar ./
cp -rf ~/.config/waybar ./
rm -rf aightConfig
rm -rf backup
rm -rf dt
rm -rf stable
mv dwm myDwnLikeBar
git remote add upstream https://github.com/Keshavig/Hyprland-configs
git add upstream *
git add * upstream
git add upstream
git remote remove upstream
git remote add upstream git@github.com:Keshavig/Hyprland-configs.git
git fetch upstream
git merge upstream main
git merge
git brach -s
git commit -m "Initial commit"
mkdir images
nvim ~/github/dotfiles/README.md
mv ~/hypr.png images
git push upstream/main
git add images
git add
git commit -m "Modified  Readme"
cd rm
clefar
rlsc
sudo rm /tmp/pacman_updates_count
nvim defaultOperatorsList.cc
clr
rm -rf defaultOperatorsList.cc
g++ example.cc operators.cc lexer.cc -o example
clccear
g++ example.cc operators.cc lexer.cc -o example && ./example
transparency.sh on
cd .local/bin
./transparency
./transparency on
g++ example.cc operators.cc lexer.cc -o example -ggdb
gdb example
nvim main.hpp
nvim fm.hpp
g++ -E com.cc
g++ -E com.cc > new.cc
nvim new.cc
gcc -c example.cc
nvim example.o
sxiv
sxiv ~/clones/wallpapers
nvim hyprland.cof
g++ practiceGpt.cc -o pg
checkupdates
sudo pacman -Syu
yay -Syyu
~/.local/bin/getupdates && cat /tmp/pacman_updates_count
yay -Qu | wc -l
(yay -Qu | wc -l) > "/tmp/pacman_updates_count"\

cat /tmp/pacman_updates_count
nvim /tmp/pacman_updates_count
nvim get
nvim ~/.cache/updates
getupdates && cat ~/.cache/updates
nvim ~/.config/waybar/config.jsonc
rm -rf ~/.cache/updates
rewa
wc
man wc
transparency.sh off
tmxua
nvim practiceGpt.cc
echo $$
cd ~
appropo
appropos
apropos
apropos what
apropos apropos
man apropos
echo {1..10}
echo {1..100}
echo {1..1000}
echo {1..10000}
echo {1..100000}
echo {1..1000000}
yes
man yes
yes clear
cd propj
yay -Qu
cat ~/.cache/updates
man nohup
which nohup
time sarchi
uptime -r
uptime -m
uptime -p
ff uptime
uptime
sarchi
mkdir themes
cp style.css ./themes/doom-one_style.css
cd tok
cd otk
cd config
nvim options.lua
cd nvi
nvim lspkind.luau
nvim lspkind.lua
rm -rf lspkind.lua
nvim *.c
nvim nw.c
nvim glfw.c
rm *.c
nvim ~/projects/fm/src/ast.cc
killall waybar
waybar &
cd wa
cd tokyonight.nvim/
cd lua/tokyonight/co
cd lua/tokyonight/colors
nohup waybar &
cd projects/
getupdates
yay -u
nvim -v
nvim -U
nvim -u
man nivm
nvim nvim
man nvim
nvim -U NORC
nvim -U NONE
sudo nvim
rm -rf practiceGpt.cc
mkdir playround
mv playround/ playground
cleare
sensors
man sensors
sensors -s
nvim ~/.config/nvim/lua/config/options.lua
nvim playStack
3;1:3uhex
hex
hd
hud
man h
mandb
mkdir icons
cp config.jsonc style.css stable/*
cp config.jsonc style.css stable/
cd q
cd icons
sxiv *
nvim config.py
lsmod
nvim write.cc
make writ
make write
./write
nvim write.c
mv write.c kernel.c
x86_64-elf-gcc -ffreestanding -c kernel.c -o kernel.o\
x86_64-elf-ld -T linker.ld -o kernel.bin kernel.o\

nvim kernel.c
mv kernel.c vga_user.c
gcc vga_user.c -o vga_user\
sudo ./vga_user\

./vga_user
nvim vga_user
grep CONFIG_DEVMEM /boot/config-$(uname -r)\

sudo ./vga_user
sxiv ~/Downloads
hyprctl xprop
hyprctl setprop
man hyprctl
hyprctl clients
mkdir icons_not_workspace_icons
cp config.jsonc style.css icons_not_workspace_icons
nvim st
killall getupdates
pacman -Qqtd
pacman -Qqtq
pacman -Qq | wc -l
nvim getupdates
f
clce
aa
man |
man pipe
man pipes
man '|'
man linux
man linux32
tmux new
lsc
mv aightConfig wcon1
mv backup wcon2
mv dt wcon3
mv dwm wcon4
mv icons wcon5
mv icons_not_workspace_icons wcon6
mv stable wcon7
rm -rf style_weird.css
ls wcon{1..7}
mv wcon1/config wcon1/config.jsonc
rm -rf ~/.cache/currentWaybarTheme
mkdir wcon8
cp config.jsonc style.css wcon8
clearc
cp -rf ~/.config/waybar ~/backup/waybar
nvim ~/.config/waybar/wcon2
rm -rf ~/.config/waybar
cp -rf ~/backup/waybar ~/.config/
nvim ~/.config/waybar/wcon5
cp * ../
nvim wcon1
pacman -Qq
mv wcon6 wcon5
mv wcon7 wcon6
mv wcon7 wcon8
mv wcon8 wcon7
notify-sennd
notify-send
notify-send hi
sudo pacman -S mako\

~/.local/bin/change_waybar_style
7;9u
nvim wcon7/config.jsonc
cd wcon
nvim wcon{1..6}/config.jsonc
./change_waybar_style
change_waybar_style -s
hyprctl reload
cd wcon1
cd wcon3
cd wcon2
cd ...
cd wcon6
cd clear
change_waybar_style -r
./change_waybar_style -s
bluetoothctl
spin
man spin
cal 1752
\:>file
nvim file
rm -rf file
> clear
echo $'\u0394' # Uppercase Delta\
echo $'\u03B4' # Lowercase delta\

echo -e "\033[1m\u0394\033[0m" # Bold Uppercase Delta\
echo -e "\033[1m\u03B4\033[0m" # Bold Lowercase Delta\

echo $'\u1D6C7' # Mathematical Double Struck Delta\

ó°ƒ§‚
cd playground
man stack_cast
man static_cast
curl cht.sh/cpp/static_cast
curl cht.sh/cpp/static_cast | bat
g++ playStack.cc -o playStack
clcaer
nvim playStack.cc
./playStack
man mako
man makoctl
mkdir mako
cd mako
mako --help -c
mako -c
mako --config
makoctl --help
mako --help | grep font
mako --font "JetBrainsMono Nerd Font" clear
mako --font "JetBrainsMono Nerd Font"
makoctl reaload
notify-send kafjdsdaf
mako --help
mako --help | grep time
fd / aclear
fd fiel /
fd mako /
nvim conn
man 5 mako
killall mako
mako
mako &
celar
notify-send "Kill yourself:)"
notify-send "Kill yourself:)kasjfdlkdsjalkfjdsfj\najfdklajsdkfljdslkfjdsjfkajdfslk\nlajfkljadlkdfjasdjdfds\n"
mako -u
mako -u high
notify-send -u high "clear"
notify-send -u critical "clear"
notify-send -u critical "System done we done"
notify-send "clear\
"
nvim cno
nvim config
makoctl
makoctl reload
notify-send "Shutting down.."
kjdsdf
kjkaf
cargo new
cargo new pro
cd por
cd pro
rm -rf pro
2clear
nvim lsp.lua
mv lsp.lua lsp
nvim main.c
rm -rf main.c
+clear
mkdir ast
cd sst
cd ast
rm -rf ast
nvim ~/.config/nvim/lua/plugins/lualine.lua
/usr/bin/ls
ls -n
sfjkljksdf
nvim hyprland.confn
g++ ast.cc lexer.cc -o ajsfkjsdlkfkjdsjjf
g++ ast.cc lexer.cc operators.cc -o ajsfkjsdlkfkjdsjjf
./ajsfkjsdlkfkjdsjjf
rm -rf ajsfkjsdlkfkjdsjjf
nvim --clear
nvim --clean
rm -rf clean
nvim awk
rm -rf awk
nvim com.cc
rm -rf com.cc
rm -rf vga_user*
rm -rf write
rm -rf Untitled supermann
rm -rf main.rs new.cc
nvim reway
change_waybar_style
poweroff
tmux new -s "fm:
rm -rf example.o
vim Makefile
nvim pg
./pg
rm -rf pg
cd hpyr
nvim ptr.c
clang ptr.c -o ptr -Wall -Wpedantic
gcc ptr.c -o ptr -Wall -Werror -Wpedantic
./ptr
rm -rf ptr ptr.c
gdb clear
nvim example.cc
make && make run
sudo pacman -S conky
cd xmm
cd xmonad
mkdir ~/.config/conky
cp -rf doom-one-01.conkyrc ~/.config/conky/main.conkyrc
mv main.conkyrc conky.conf
cd github
cd tokyonight.nvim
cd tokyonight
cd co
cd colors
nvim storm.lua
nvim night.lua
q
lcs
nvim conr
chmod +x conr
conr
eixt
pfetch
els
git clone https://github.com/Pixel2175/wallpapers.git cl
mv cl/* ./
rm -rf .git
feh --bg-scale $(cat ~/.cache/wall)
feh --bg-stretch $(cat ~/.cache/wall)
feh --bg-fill $(cat ~/.cache/wall)
feh --bg-max $(cat ~/.cache/wall)
feh --bg-center $(cat ~/.cache/wall)
convert $(cata ~/.cache/wall) -resize 50% here.png
magick $(cat ~/.cache/wall) -resize 50% here.png
magick $(cat ~/.cache/wall) -resize 70% here.png
magick $(cat ~/.cache/wall) -resize 10% here.png
feh --bg-fill here.png
hyprpaper
g++ example.cc operators.cc lexer.cc -o example -ggdb -Wpedantic -Wall -Werror
./example
clang++ playStack.cc -o playStack
g++ ast.cc lexer.cc operators.cc -o clear -g
rm -rf example*
~\r=
=~
=\r~
echo -e "=\r~"
echo -e "~\r="
echo $'\u2245'\

g++ use_error.cc -o ser error_handle.cc
./sers
./ser
nvim use_error.cc
nvim error_handle.hpp
rm -rf error_handle.cc
rm -rf error_handle.hpp
rm -rf ser
le
nvim plexer.cc
rm -rf plexer.cc
rm -rf use_error.cc
nvim lexer.hpp
nvim .
cd srcc
g++ ast.cc lexer.cc operators.cc -o clear -O2
clearls
./
g++ ast.cc lexer.cc operators.cc -o clear
size
man size
size clear
size clear -h
size clear --format=gnu
size clear --format=sysv
size clear --format=berkly
nvim error.hpp
nvim parse.hpp
nvim checks.hpp
cd ..c
rm -rf playground
fun
word
git init
git branch -m main
git stats
git commit -m "first commit"
git remote add upstream git@github.com:Keshavig/fm.git
git rebase upstream/main
git push --set-upstream upstream main
git sttaus
for file in *.hpp; do mv -- "$file" "${file%.conf}.h"; done\

mv checks.hpp.h checks.h
mv error.hpp.h error.h
mv lexer.hpp.h lexer.h
mv parse.hpp.h parse.h
mv tokenType.hpp.h tokenType.h
mv operators.hpp.h operators.h
nvim fm.h
rm -rf fm.h
git commit -m "Change .hpp to .h, and change readme"
git commit -m "Changed .hpp to .h, and changed readme"
git commit -a "Changed change to Changed"
cd Downloads
mv foggy_valley_l.png ~/clones/wallpapers
make char
gcc char.c -o char -Wall -Werror -Wpedantic
gcc char.c -o char -Wall -Werror -Wpedantic -Wextra
nvim char.c
./char
jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJKkkkkkkkkkkkkkkk
reway
vulkaninfo\

g++ main.cc -o main -lglfw -lvulkan
g++ main.cc -o main -lglfw -lvulkan -Wall -Werror -Wpedantic
cd wcon7
cp -rf wcon7 wcon8
nvim wcon7
cd .localc
reeway
cd 8
cp -rf wcon8 wcon9
cd con
g++ ast.cc lexer.cc operators.cc -o parser -Wall -Werror -Wpedantic -Weverything
lf
cd ..config
cd .locla
lscd
cp -rf wcon8 wcon10
cd wcon8
nvim change_waybar_style
cd hyprland
CLEAR
cd prj
,clear
g++ ast.cc lexer.cc operators.cc -o parser
cd wcon9
jb
jg
killall fg
man fg
fg --help
cp -rf wcon10 wcon11
cd wcon10
cp -rf wcon8 wcon12
cd wcon112
cd wcon12
cp -rf wcon7 wcon13
cp -rf wcon8 wcon14
7;9u7;9u7;9uclear
vim style.css
transparency on 0.84
nvim personal_init.lua
nvim ../config/options.lua
nvim ~/.config/kitty/themes/tokyonight
nvim ~/.config/kitty/themes/tokyonight.conf
nvim ~/.config/hypr/hyprland.conf
nvim transparency.lua
nvim tokyo
nvim tokyonight.lua
cd kitt
transparency on 0.98
cllear
sxiv here.png beauty.png headless.png scren
sxiv here.png beauty.png headless.png screenshot.png
sxiv .
rm -rf here.png screenshot.png
mkdir screenshots
mv headless.png beauty.png screenshots
rm -rf main main.cc
rm -rf OpenGL.pdf
nvim nohup.out
rm -rf nohup.out
nvim duperman
rm -rf duperman
nvim thinking.txt
mem
top clear
top
man tor
tor
tor-04
which tor
which tor*'
which which
man clear
where clear
cd /bin/
clear -x
lsl
            fprintf(stderr, "%sError: invalid syntax\n%s%s\n", COLOR_RED, m_expression.c_str(), RESET_TERM_COLOR);\
            fprintf(stderr, "%s%*c ^\n%s", COLOR_RED, static_cast<int>(CurrentTokenPosition - 1), ' ', RESET_TERM_COLOR);\

rm -rf error.h
nvim errors.h
lg
clang++ main.cc
rm -rf main.cc
3.5 * 2.1 / (4.7+1.3) - 6.2 + (8.1-3.4) * 2 / 5.5 + 7.2
rm -rf errors.h
mkdir ksh
cd ksh
nvim ksh.c
gcc -o ksh ksh.c -Wall -Wpedantic -Werror
sudo nvim /etc/shells
chsh
kadsklf
printf
echo $SHELL
chsh ~/projects/ksh/ksh
man chsh
chsh ke -s ~/projects/ksh/ksh
echo $?
cdc fm
sclcear
bash -i
man bash
man bash | bat
c;ear
tmux new -s "problem"
tmux
sudo pacman -S libquadmath
nvim quadmath.cc
./math
nvim math.c
gcc math.c -o math -lquadmath
clang math.c -o math -lquadmath
man printf
man 2 prinf
man 2 printf
man 3 printf
man 4 printf
man 5 prinf
man 5 printf
man 6 printf
man 7 printf
man 8 printf
man 9 printf
man 10 printf
car
nvim stdiin.c
g++ stdiin.c -o stdiin
mv stdiin.cc a.cc
nvim stdiin.cc
g++ a.c -o a.out
nvim a.out
gcc a.c -o a.out
nvim a.c
ls -later
man netcat
sudo pacman -S netcat
nvim a.cc
g++ a.cc -o a.out
grep "stod" *
cat * | grep "stod"
cat *
kat *
kat*
echo *
echo .
(3245.9837452983402394 + 564.92347298570389) * (234.56783924823948 - 876.2348992348) / 987.23490857234 + (1234.12345678901234 * 6789.23456789012345) - 0.00000012345678901234
nvim operators.cc
column
cat * | column
r\
=> (
rm -rf a.cc a.out
sudo pacman -S python-pywal
cd kity
ls | grep jojo
wal -i jojo-tokyonight.png
printf "%b" "\033]11;#ff0000\007"
pip3 install pywal16
sudo pacman -S pipx
sudo pacman -S python-pipx
sudo pacman -Rns python-pywal
sudo pacman -R python-pywal
pipx install pywal16
wal -i ~/clones/wallpapers/jojo-tokyonight.png
sudo pacman -S pidof
sudo pacman -S imagemagick
transparency on 0.96
cd sxiv
cd exec
nvim key-handler
rm -rf .wal
wal -i ~/clones/wallpapers/0012.jpg
wal -i ~/clones/wallpapers/0012.jpg --cols16
nvim ~/.config/sxiv/exec/key-handler
nvim ~/.local/bin/pywall
cat ~/.cache/wall
wal -i ~/clones/wallpapers/wp6600388.png --cols16
magickconvert
cd wallpaper
cd wallpapers
wal -i ~/clones/wallpapers/Manga-Girl-Rain.png --cols16
killall wayland
htop
cd .wal
cd colorschemes
cd dark
cd light
cd ..cache
cd .cache
cd wal
nvim ~/.config/waybar/wcon8
nvim colors-hyprland.conf
nvim colors.hs
nvim colors.sh
nvim *.css
nvim colors-waybar.css\ 
nvim colors-waybar.css
cd .conifg
sudo nvim /etc/pacman.conf
nvim msg.go
nvim ~/.config/kitty/kitty.conf
nvim rose-pine-moon.conf
cea
nvim themes
transparency on 0
transparency on 1
cdc proj
git add Re
git add *
git commit -m "Added build instruction"
tmux attach
nvim ast.c
st
mkdir omp
sudo pacman -S zoxide
yay -S oh-my-posh
z
zoxide
man zoxide
cp -rf .zshrc ~/backup/zsh
sudo pacman -S yay-git
cleaer
time cperc
time
cd omp
cd alacritty
nvim ~/.config/omp/config.toml
cat /dev/zero
man /dev/zero
man zero
whatis /dev/zero
cd .local
nvim transparency
transparency on
transparency on 0.90
cd wcon13
cd 14
cd wcon14
transparency on 0.85
lecar
transparency on 0.88
clcea
transparency on 0.89999999
exixt
tmux new -s "fm"
echo "$(ls)" 
echo "$(ls)" | ls
man echo
gclear
cd qtile
sclear
cd 04
nvim DoomOne.conf
cd conk
cd .cnofig
cd conky
man conky
nvim conky.conf
conky
killall conky
history | awk '{print $2}' | sort | uniq -c | sort -nr | head -10
history | awk '{print $2}' | sort | uniq -c | sort -nr 
history | awk '{print $2}' | sort | uniq -c
history --all
history -a
history
hist
man histroy
man history
cat .zsh_history | sort | uniq -c 
cat .zsh_history | sort | uniq -c | head -10
zoxide query
cd conky qtile
cd sr
b
bc
\:wq
./parer
nvim currentProblem.md
nvim Todo.md
updatetn
update_tn
python3
time -v ./parser
smem
sudo pacman -S smem
valgrind
-f
time f
time -f
clecar
time ./example
time ./parser
cperc
watch -n 1 "ps -p <pid> -o %mem,vsz,rss,./parser"
watch -n 1 "ps -p <pid> -o %mem,vsz,rss,parser"
rm -rf currentProblem.md
nvim funIdea.md
g++ ast.cc lexer.cc operators.cc -o parser -Wall -Werror -Wpedantic
./parser
fm
rm -rf parser
nvim bse
ls -color
ls --color
cd backup
nvim ~/backup/zsh
ls --color=always
exa --color=always --icon=always
sudo pacman -S sl tree
man tree
man sl
nvim baseAstNode.h
qclear
mv baseAstNode.h base_ast_node.h
nvim tokenType.h
rm -rf tokenType.h
nvim operators.
cclear
tmuxa 
nvim operators.h
exa --color=always --icons=always
exa --color=always
nvim token.h
nvim pare.h
rm -rf parse.h
nvim lexer.h
nvim lexer.cc
cd root
cd /
tree
man pushd
which pushd
pushd home
pushd ke
pushd .config/nvim
popd
nvim onedark.conf
cd projj
zoxide query -l -s
nvim base_ast_node.cc
rm -rf base_ast_node.cc
cd neovim lua
nvim blink.lua
cd personal
nvim theme.lua
transparency on 0.95
feh --bg-color black\

feh 
man feh
rcd
nvim hyprpaper.conf
killall hyprpaper
nvim ~/.config/nvim/lua/personal/theme.lua
transparency on 0.4
transparency on 0.1
clears
transparency on 0.5
nvim .zsh_history
cd nvim
cd lua
nvim rose-pine.lua
9;1:3unvim ast.cc
g++ -o eval evaluate.cc lexer.cc operators.cc parser.cc -Wall -Werror -Wpedantic
trace
gdb eval
nvim ast.cc
mv ast.cc All_In_One_Eval.cc
yay -S freetube-git
yay -S freetube-bin
freetube
yay -Rns freetube
yay -Rns freetube-bin
mkdir programs
cd programs
git clone https://github.com/yorukot/superfile.git
bash -c "$(curl -sLo- https://superfile.netlify.app/install.sh)"
mv hotkeys.toml def_hotkeys.toml
nvim hotkeys.toml
nvim tokyonight.toml
cd superfile
cd theme
nvim config.toml
rm -rf *.zip
spf
sudo pacman -S premake
pmake
premake
nvim eval.make
3;1:3uclear
nvim Make
d ..
premake5 clean
make evaluater
make release
nvim clean
chmod +x clean
./clean
sudo pacman -Rns sl
transparency on 0.7
transparency on 0.8
cd waybar
cp -rf wcon8 wcon15
cd wcon15
nvim ~/.local/bin/change_waybar_style
nvim style.css
nvim config.jsonc
cd hypr
nvim hypr
mv clean clear
transparency on 0.9
tmux new -s "dev"
git checkout -b fix
git branch
nvim evaluate..cc
dc fm
\:w
cd ../..
cd 
ulimit -c
man ulimit
ulimit --help
ulimit -h
ulimit
ulimit clear
ulimit e
ulimit 2
cd fm bin Debug
gdb evaluater
command
man command
command --help
which command
command ls
vim -b evaluater
vim cray
./bin
g++ -o eval evaluate.cc lexer.cc operators.cc parser.cc -Wall -Werror -Wpedantic -g
./eval
rm -rf ./eval
nvim base_ast_node.h
git add base_ast_node.h evaluate.cc
git push upstream fix
git pull upstream
git checkout min
rm -rf eval
git pull
rm -rf obj
nvim clear
git add .
git commit -m "removed compilation dirs"
git pus
rm -rf All_In_One_Eval.cc
nvim TO
rm -rf Todo.md
cp -rf funIdea.md ../
git add src/All_In_One_Eval.cc src/Todo.md src/funIdea.md
git commit -m "removed todo.md all_in_one_eval.cc and funIdea.md because they were just making src dir cluttered"
git push upstream main
git commit -m "update: gitignore"
git checkout fix
git switch -c dev
mls
ls *.c
ls *.cc
which ls
man ls
git statuts
git add .gitignore
git add README.md
git add src/parser.cc src/parser.h
git staus
git rebase
git rebase upstream main
git log --oneline --graph
./evaluater
git branch -d fix
git checkout main
git push upstream --delete fix
git fetch upstream main
git pull upstream main
git checkout dev
git rebase main
man c
which c
c
rm -rf *.c *..cc
rm -rf *.c
delex -f
rm -rf *.cc
g++ cl.c -o cl && ./cl
g++ cl.cc -o cl
lc
cd fm
nvim ~/Programming
./cl
nvim cl.cc
clang++ cl.cc -o cl --std=c++23
cd fm src
cat /dev/random
cat /dev/random | xxd
tmux 
nvim parser.cc
nvim checks.s.cc
curl github.com/elenapan/dotfiles/blob/master/config/kitty/colors.conf
curl github.com/elenapan/dotfiles/blob/master/config/kitty/colors.conf clear
curl https://github.com/elenapan/dotfiles/blob/master/config/kitty/colors.conf clear
cd themes
nvim elena.conf
ff
fastfetch
nvim .config
transparency off
cd .config hypr
nvim hyprland.conf
ylsdfj
\

cd kitty 
lls
kdjafkjdsf\

## go to any line\

kajflkjksdafjlksdajf## go to any line\
## go to any line\
## go to any line\
## go to any line\
## go to any line\
## go to any line\
## go to any line\
## go to any line\
## go to any line\
## go to any line\
kj
kadfj

xlw
XLWE
la
cd kityt
cd kitty
nvim kitty.conf
mv fm matek
mkdir tests
mv src source
clera
mv base_ast_node.h node.h
nvim evaluate.
nvim evaluate.h
rm -rf evaluate.h
nvim evaluate.cc
mv evaluate.cc ~/Programming
gammastep
gammastep -O 3000
cdlear
nvim Makefile
cleara
make help
/usr/bin/ls -al
ld
nvim main.d
rm -rf tests.make
rm -rf matek-lib.make
rm -rf funIdea.md
g++ main.cc ../source/*.cc
g++ checks.cc lexer.cc parser.cc operators.cc matek.cc ../tests/main.cc
nvim matekcc
g++ checks.cc lexer.cc parser.cc operators.cc matek.cc ../tests/main.cc -o clear
./clear
nvim node.h
rm -rf clear
rm -r *.make
rm Makefile
rl
nvim ~/.zshrc
ls -a
cd test
gammastep -O 3500 
gammastep -O 3500 &
gammastep -O 3200 &
gammastep -O 3100 &
killall gammastep &
gammastep -O 3000 &
killall gammastep
killall killall
man killall
pw
rm -rf *.make
rm -rf Makefile
rm -rf obj bin
cd t
./main.cc
nvim main.o
xxd main.o
man xxd
cd matek-lib
nvim ~/.config/kitty/themes/rose-pine-moon.conf
cd te
cd tes
make config=release
/usr/bin/ls -alh
cd Release
make 
make tests
make run
nvim tests.make
g++ tests/main.cc -o tests -I source -L lib/Debug -lmatek-lib
g++ tests/main.cc -o test -I source -L lib/Debug -lmatek-lib
cd build
cd objs
cd obj
ld main.o ../../../bin/Debug/libmatek-lib.a
ld main.o ../../../lib/Debug/libmatek-lib.a
premake5
rm -rf bin lib Makefile matek-lib.make obj tests.make
rm -rf premake5.lua
rm -rf build
glt
lazygit
nvim README.md
g++ *.cc ../tests/main.cc
./test
./a.out
sudo pacman -Syyu
rm -rf a.out
cd . .
cd matekx
/usr/bin/cd matekx
which cd
where cd
pushd matekx
cd bi
rclea
rls
cd .
ls -al
pre
ls ..
nvim .git
nvim .gitignore
git add .gitignore README.md premake5.lua
git push
git add source/node.h
git add source/.
git add tests
git commit
git add src
git commit 
git push upstream dev
git status
goodnight
sudo pacman -Syyu --noconfirm
cd projects
make
time make
man make
tmux new -s "matek"
x
pwd
export PATH=$(pwd)
source ~/.zshrc
bash
cd binn
cd Debug
sls
cd tets
nvim premake5.lua
premake5 gmake
time make -j 8
cd tests
matekx
./matek
nvim main.cc
cdc ..
make clean
make config=debug
make -j 
gdb matekx
nvim checks.h
man gdb
nvim matek.hh
nvim parser.h
nvim checks.cc
nvim matek.cc
nvim matek.h
rm -rf "'"
make -j 8
./matekx
kjdslkfjsdfkjldfdsadfsdjkljsdfdadlkjsdfsdjsdfdlkjdflkjslkjdsflkjslkjsffdjkl
monkey
smassh
clar
lss
clcear
claer
sl
nvim error.h
rustc --version
cd source
cargo new learning
cd learning
./main
rustc --explain E0423
r
\:q
cear
rustc main.rs -o main
cargo run
nvni ccclear
nvim main.rs
zig
cd ,.
zig new
zig init clear
zig init 
rm *.zig
rm -rf *zig
rm -rf **zig
rm -rf build.zig.zon 
mkdir zigga
cd zigga
lear
zig init
zig build
cd src
nvim root.zig
nvim main.zig
cd zig-out/
cd bin
./zigga
cd lib
sudo pacman -S strace
strace
man strace
netcat
cleafr
lcear
cd matek
cd bin/Debug
strace matekx
strace ./matekx
nvim
cd .confi
cler
cd nvim lua
cd plugins
nvim lualine.lua
nvim snacks.lua
l
mkdir test
rm -rf test
mkdir benchmark
man go
go doit.go
go doit
go
go build ./doit.go
time -t ./doit
man time
nvim doit.go
go run doit.go
time go run doit.go
g++ doit.cc -o doit
strace doit
strace ./doit
clea
rclear
rm -rf doit.go
nvim doit.py
python3 doit.py
time python3 doit.py
mv doit.py doit.rs
./df
rustc doit.rs -o doit
./doit
nvim doit.rs
g++ doit.cc -o df
time ./df
time ./doit
s
nvim doit.c
nvim doit.cc
g++ doit.cc -o cpp
rustc doit.rs -o rust
gcc doit.c -o c
rm -rf df doit
cd Programming
cd benchmark
nvim text.
g++ doit.cc -o -O3 cpp
g++ doit.cc -O3-o cpp
g++ doit.cc -O3 -o cpp
time ./cpp
rustc doit.rs -O3 -o rust
rustc doit.rs -C -opt-level=3 -o rust
rustc doit.rs -C opt-level=3 -o rust
time ./rust
gcc doit.c -O3 -o c
time ./c
tmux a
cleaf
nvim error.cc
rm error*
nvim want.md
cp -rf fish ~/.config/
nvim ~/.config/fish/config.fish
sudo pacman -S Starship
sudo pacman -S starship
chsh ke 
cd
cd fish
nvim config.fish
cd ..
cd  sta
cd starship
nvim starship.toml
fish
cd clones
cd dotfiles
ls -alh
cd .config
cp -rf starship.toml ~/.config/
logout
killall hyprland
killall Hyprland
autoload -U tetris
tetris
nvim .zshrc
whoami
sudo whoami
ls
clear
echo $HOST
hostname
exit
: 1740752172:0;clear
: 1740752173:0;ls
: 1740752174:0;cd
: 1740752175:0;clear
: 1740752177:0;exit
